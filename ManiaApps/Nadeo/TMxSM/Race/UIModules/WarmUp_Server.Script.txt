/**
 *  UI module: WarmUp server side
 */
#Const Version		"2021-09-13"
#Const ScriptName	"ManiaApps/Nadeo/TMxSM/Race/UIModules/WarmUp_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/ModeLibs/Common/UIModules_Common.Script.txt" as UIModules_Common
#Include "ManiaApps/Nadeo/TMxSM/Race/UIModules/WarmUp_Common.Script.txt" as UIModules_WarmUp_Common

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const UIModules_WarmUp_Common::C_VisibleFor_Everyone as C_VisibleFor_Everyone
#Const UIModules_WarmUp_Common::C_VisibleFor_PlayersOnly as C_VisibleFor_PlayersOnly
#Const UIModules_WarmUp_Common::C_VisibleFor_SpectatorsOnly as C_VisibleFor_SpectatorsOnly

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_WarmUp_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the configuration of the UI module
UIModules_Common::ComponentModeLibsUIModules_K_ModuleConfig GetConfig() {
	return UIModules_WarmUp_Common::C_UIModuleConfig;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Set who can see the warm up UI (players/spectators/everyone)
Void SetVisibleFor(Integer _VisibleFor) {
	declare netwrite Integer Net_TMxSM_WarmUp_VisibleFor for Teams[0];
	Net_TMxSM_WarmUp_VisibleFor = _VisibleFor;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	
	declare netwrite Boolean Net_TMxSM_WarmUp_IsVisible for _Player;
	Net_TMxSM_WarmUp_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;
	
	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}