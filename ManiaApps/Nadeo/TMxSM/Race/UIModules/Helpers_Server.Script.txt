/** 
 *	Component: RaceHelpers
 */
#Const Version		"2021-11-08"
#Const ScriptName	"ManiaApps/Nadeo/TMxSM/Race/Helpers_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "ManiaApps/Nadeo/TMxSM/Race/UIModules/Helpers_Common.Script.txt" as Helpers

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const Helpers::C_RaceState_Waiting as C_RaceState_Waiting
#Const Helpers::C_RaceState_Racing as C_RaceState_Racing
#Const Helpers::C_RaceState_RaceOutro as C_RaceState_RaceOutro
#Const Helpers::C_RaceState_RaceWait as C_RaceState_RaceWait
#Const Helpers::C_RaceState_MapIntro as C_RaceState_MapIntro

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Update the number of laps to play
 *	on the map
 *
 *	@param	_LapsNb										The number of laps
 */
Void SetLapsNb(Integer _LapsNb) {
	declare netwrite Integer Net_Race_Helpers_LapsNb for Teams[0];
	Net_Race_Helpers_LapsNb = _LapsNb;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set the lap number of the player
 *
 *	@param	_Player										The player to update
 *	@param	_Lap											The lap number
 */
Void SetPlayerLap(CPlayer _Player, Integer _Lap) {
	declare netwrite Integer Net_Race_Helpers_PlayerLap for _Player;
	Net_Race_Helpers_PlayerLap = _Lap;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set the current lap start time of the player
 *
 *	@param	_Player										The player to update
 *	@param	_LapStartTime							The lap start time
 */
Void SetPlayerLapStartTime(CPlayer _Player, Integer _LapStartTime) {
	declare netwrite Integer Net_Race_Helpers_PlayerLapStartTime for _Player;
	Net_Race_Helpers_PlayerLapStartTime = _LapStartTime;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set the race state of the player
 *
 *	@param	_Player										The player to update
 *	@param	_RaceState								The race state
 */
Void SetPlayerRaceState(CPlayer _Player, Integer _RaceState) {
	declare netwrite Integer Net_Race_Helpers_PlayerRaceState for _Player;
	Net_Race_Helpers_PlayerRaceState = _RaceState;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set the independent laps status
 *
 *	@param	_IsIndependentLaps				The independent laps status
 */
Void SetIndependentLaps(Boolean _IsIndependentLaps) {
	declare netwrite Boolean Net_Race_Helpers_IndependentLaps for Teams[0];
	Net_Race_Helpers_IndependentLaps = _IsIndependentLaps;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set time limit
 *
 *	@param	_TimeLimit
 */
Void SetTimeLimit(Integer _TimeLimit) {
	declare netwrite Integer Net_Race_Helpers_CutOffTimeLimit for Teams[0];
	Net_Race_Helpers_CutOffTimeLimit = _TimeLimit;
}

/** Set UI mode for local or online modes
 *
 *	@param	_IsLocalMode							True to hide spectator info
 *																		False to show
 */
Void SetLocalMode(Boolean _IsLocalMode) {
	declare netwrite Boolean Net_Race_Helpers_IsLocalMode for Teams[0];
	Net_Race_Helpers_IsLocalMode = _IsLocalMode;
}