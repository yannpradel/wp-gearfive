/**
 *	UI module: RaceRanking server side
 */
#Const Version		"2021-05-06"
#Const ScriptName	"ManiaApps/Nadeo/TMNext/TrackMania/RoundsBoulet/UIModules/RaceRanking_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/ModeLibs/Common/UIModules_Common.Script.txt" as UIModules_Common
#Include "ManiaApps/Nadeo/TMNext/TrackMania/RoundsBoulet/UIModules/RaceRanking_Common.Script.txt" as UIModules_RaceRanking_Common

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_RaceRanking_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the configuration of the UI module
UIModules_Common::ComponentModeLibsUIModules_K_ModuleConfig GetConfig() {
	return UIModules_RaceRanking_Common::C_UIModuleConfig;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Create a rank for the teams ranking
Integer[] CreateTeamRank(Integer _TeamId, Integer _Rank) {
	return [_TeamId, _Rank]; //< The order in the array is important, do not change it
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Send the teams ranking to the clients
Void SetTeamsRanking(Integer[][] _TeamsRanking) {
	declare netwrite Integer[][] Net_RoundsBoulet_RaceRanking_TeamsRanking for Teams[0];
	declare netwrite Integer Net_RoundsBoulet_RaceRanking_TeamsRankingUpdate for Teams[0];
	Net_RoundsBoulet_RaceRanking_TeamsRanking = _TeamsRanking;
	Net_RoundsBoulet_RaceRanking_TeamsRankingUpdate += 1;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Send the teams finish to the clients
Void SetTeamFinish(Integer _TeamId, Integer _FinishedNb, Integer _MembersNb) {
	declare netwrite Integer[][Integer] Net_RoundsBoulet_RaceRanking_TeamsFinish for Teams[0];
	declare netwrite Integer Net_RoundsBoulet_RaceRanking_TeamsFinishUpdate for Teams[0];
	Net_RoundsBoulet_RaceRanking_TeamsFinish[_TeamId] = [_FinishedNb, _MembersNb]; //< The order in the array is important, do not change it.
	Net_RoundsBoulet_RaceRanking_TeamsFinishUpdate += 1;
}
Void ResetTeamsFinish() {
	declare netwrite Integer[][Integer] Net_RoundsBoulet_RaceRanking_TeamsFinish for Teams[0];
	declare netwrite Integer Net_RoundsBoulet_RaceRanking_TeamsFinishUpdate for Teams[0];
	Net_RoundsBoulet_RaceRanking_TeamsFinish = [];
	Net_RoundsBoulet_RaceRanking_TeamsFinishUpdate += 1;
}


// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Send the teams round points to the clients
Void SetTeamsRoundPoints(Integer[Integer] _TeamsRoundPoints) {
	declare netwrite Integer[Integer] Net_RoundsBoulet_RaceRanking_TeamsRoundPoints for Teams[0];
	declare netwrite Integer Net_RoundsBoulet_RaceRanking_TeamsRoundPointsUpdate for Teams[0];
	Net_RoundsBoulet_RaceRanking_TeamsRoundPoints = _TeamsRoundPoints;
	Net_RoundsBoulet_RaceRanking_TeamsRoundPointsUpdate += 1;
}
Void ResetTeamsRoundPoints() {
	SetTeamsRoundPoints([]);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	
	declare netwrite Boolean Net_RoundsBoulet_RaceRanking_IsVisible for _Player;
	Net_RoundsBoulet_RaceRanking_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;
	
	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	SetTeamsRanking([]);
	ResetTeamsRoundPoints();
	ResetTeamsFinish();
	
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}