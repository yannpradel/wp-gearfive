/**
 *  UI module: WelcomePopUp server side
 */
#Const Version    "2020-09-16"
#Const ScriptName "ManiaApps/Nadeo/TMNext/TrackMania/ChampionOGL/UIModules/WelcomePopUp_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_ChampionOGL_WelcomePopUp"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Send the division of the server
Void SetDivision(Text _Division) {
	declare netwrite Text Net_ChampionOGL_WelcomePopUp_Division for Teams[0];
	Net_ChampionOGL_WelcomePopUp_Division = _Division;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Send the points distribution
Void SetPointsDistribution(Integer[] _PointsDistribution) {
	declare netwrite Integer[] Net_ChampionOGL_WelcomePopUp_PointsDistribution for Teams[0];
	declare netwrite Integer Net_ChampionOGL_WelcomePopUp_PointsDistributionUpdate for Teams[0];
	Net_ChampionOGL_WelcomePopUp_PointsDistribution = _PointsDistribution;
	Net_ChampionOGL_WelcomePopUp_PointsDistributionUpdate += 1;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	
	declare netwrite Boolean Net_ChampionOGL_WelcomePopUp_IsVisible for _Player;
	Net_ChampionOGL_WelcomePopUp_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;
	
	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
	
	SetDivision("");
	SetPointsDistribution([]);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}