/**
 *	UI module: LoadSave server side
 */
#Const Version		"2021-10-15"
#Const ScriptName	"ManiaApps/Nadeo/TMNext/TrackMania/ChampionCommon/UIModules/LoadSave_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/ModeLibs/Common/UIModules_Common.Script.txt" as UIModules_Common
#Include "ManiaApps/Nadeo/TMNext/TrackMania/ChampionCommon/UIModules/LoadSave_Common.Script.txt" as UIModules_LoadSave_Common

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_LoadSave_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the configuration of the UI module
UIModules_Common::ComponentModeLibsUIModules_K_ModuleConfig GetConfig() {
	return UIModules_LoadSave_Common::C_UIModuleConfig;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Reset the ready state of all players to its default value
Void ResetReadyState() {
	declare netwrite Integer Net_ChampionCup_LoadSave_ResetReadyState for Teams[0];
	Net_ChampionCup_LoadSave_ResetReadyState += 1;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Check if all players are ready
Boolean AllPlayersAreReady() {
	declare netwrite Int2 Net_ChampionCup_LoadSave_ReadyPlayersNb for Teams[0];
	Net_ChampionCup_LoadSave_ReadyPlayersNb = <0, 0>;
	
	foreach (Player in Players) {
		Net_ChampionCup_LoadSave_ReadyPlayersNb.Y += 1;
		declare CUIConfig UI <=> UIManager.GetUI(Player);
		if (UI != Null) {
			declare netread Net_ChampionCup_LoadSave_IsReady for UI = False;
			if (Net_ChampionCup_LoadSave_IsReady) {
				Net_ChampionCup_LoadSave_ReadyPlayersNb.X += 1;
			}
		}
	}
	
	return (
		Net_ChampionCup_LoadSave_ReadyPlayersNb.Y > 0 &&
		Net_ChampionCup_LoadSave_ReadyPlayersNb.X >= Net_ChampionCup_LoadSave_ReadyPlayersNb.Y
	);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Update the players waiting end time
Void SetWaitEndTime(Integer _WaitEndTime) {
	declare netwrite Integer Net_ChampionCup_LoadSave_WaitEndTime for Teams[0];
	Net_ChampionCup_LoadSave_WaitEndTime = _WaitEndTime;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	declare CUIConfig UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;

	declare netwrite Boolean Net_ChampionCup_LoadSave_IsVisible for UI;
	Net_ChampionCup_LoadSave_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;
	
	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	ResetReadyState();
	AllPlayersAreReady();
	SetWaitEndTime(-1);
	
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}