/**
 *	UI module: WinScreen client side
 */
#Const Version		"2021-11-10"
#Const ScriptName	"ManiaApps/Nadeo/TMNext/TrackMania/ChampionCommon/UIModules/WinScreen_Client.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/MenuLibs/Common/Manialink/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/ModeLibs/Common/UIModules_Client.Script.txt" as UIModules
#Include "ManiaApps/Nadeo/TMNext/TrackMania/ChampionCommon/UIModules/WinScreen_Common.Script.txt" as UIModules_WinScreen_Common
#Include "Libs/Nadeo/TMNext/TrackMania/Modes/ChampionCommon/PlayerProfiles.Script.txt" as PlayerProfiles

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Img_WinScreen "file://Media/Manialinks/Nadeo/TMNext/Modes/Champion/WinScreen"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_WinScreen_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the type of layer of the UI module
CUILayer::EUILayerType GetLayerType() {
	return UIModules_WinScreen_Common::C_LayerType;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the module manialink
 *
 *  @return                           The module manialink
 */
Text GetML() {
	return MV::Create(
GetId(), 3,
"""
<frame z-index="-2" hidden="1" id="frame-global">
	<frame {{{UIModules::CustomizableUIModule(UIModules_WinScreen_Common::C_UIModuleConfig)}}}>
		<quad z-index="0" size="320 180" halign="center" valign="center" bgcolor="000000" fullscreen="1" />
		<quad id="quad-win-screen" z-index="1" size="320 180" halign="center" valign="center" />
	</frame>
</frame>
""",
"""
#Include "Libs/Nadeo/ModeLibs/TrackMania/MV_Utils.Script.txt" as MV_Utils
""",
"""
Void SetWinner(CMlQuad _Quad_WinScreen, Text _AccountId) {
	declare PlayerProfiles = {{{PlayerProfiles::P}}}GetPlayerProfiles();

	if (_AccountId != "" && PlayerProfiles.existskey(_AccountId)) {
		_Quad_WinScreen.ImageUrl = "{{{C_Img_WinScreen}}}/"^PlayerProfiles[_AccountId].WinScreen;
		_Quad_WinScreen.Visible = True;
	} else {
		_Quad_WinScreen.Visible = False;
	}
}

***MainInit***
***
declare CMlFrame Frame_Global;
declare CMlQuad Quad_WinScreen;

declare netread Text Net_FinalTMGL_WinScreen_WinnerAccountId for Teams[0];

declare Boolean DisplayModule;
declare Text WinnerAccountId;
***

***MainStart***
***
Frame_Global <=> (Page.GetFirstChild("frame-global") as CMlFrame);
Quad_WinScreen <=> (Frame_Global.GetFirstChild("quad-win-screen") as CMlQuad);

DisplayModule = Frame_Global.Visible;
WinnerAccountId = "";

SetWinner(Quad_WinScreen, WinnerAccountId);
***

***MainLoop***
***
if (PageIsVisible) {
	declare Owner <=> MV_Utils::GetOwner(This);
	if (Owner != Null) {
		declare netread Boolean Net_FinalTMGL_WinScreen_IsVisible for Owner;
		if (DisplayModule != Net_FinalTMGL_WinScreen_IsVisible) {
			DisplayModule = Net_FinalTMGL_WinScreen_IsVisible;
			Frame_Global.Visible = Net_FinalTMGL_WinScreen_IsVisible;
		}
	}

	if (Owner == Null && DisplayModule) {
		DisplayModule = False;
		Frame_Global.Visible = DisplayModule;
	}

	if (Frame_Global.Visible) {
		if (WinnerAccountId != Net_FinalTMGL_WinScreen_WinnerAccountId) {
			WinnerAccountId = Net_FinalTMGL_WinScreen_WinnerAccountId;
			SetWinner(Quad_WinScreen, WinnerAccountId);
		}
	}
}
***
""",
[
	UIModules::Component(),
	PlayerProfiles::Component()
],
[]
	);
}