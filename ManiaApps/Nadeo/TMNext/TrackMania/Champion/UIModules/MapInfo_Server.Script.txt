/**
 *  UI module: MapInfo server side
 */
#Const Version    "2020-09-10"
#Const ScriptName "ManiaApps/Nadeo/TMNext/TrackMania/Champion/UIModules/MapInfo_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_Champion_MapInfo"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Used to hide Map Info in specific situations
 *
 *	@param	_IsVisible							Whether or not the UI is visible
 */
Void SetSpecialVisibility(Boolean _IsVisible) {
	declare netwrite Boolean Net_Champion_MapInfo_SpecialVisibility for Teams[0];
	Net_Champion_MapInfo_SpecialVisibility = _IsVisible;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Update the timer end time
 *
 *	@param	_CutOffTimeLimit					The time at which the timer will end
 *																		Use a negative value to disable the timer
 */
Void SetCutOffTimeLimit(Integer _CutOffTimeLimit) {
	declare netwrite Integer Net_Champion_MapInfo_CutOffTimeLimit for Teams[0];
	Net_Champion_MapInfo_CutOffTimeLimit = _CutOffTimeLimit;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	
	declare netwrite Boolean Net_Champion_MapInfo_IsVisible for _Player;
	Net_Champion_MapInfo_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;
	
	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	SetCutOffTimeLimit(-1);
	SetSpecialVisibility(True);
	
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}