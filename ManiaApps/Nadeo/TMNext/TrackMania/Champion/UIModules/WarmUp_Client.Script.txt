/**
 *  UI module: WarmUp client side
 */
#Const Version    "2023-03-23"
#Const ScriptName "ManiaApps/Nadeo/TMNext/TrackMania/Champion/UIModules/WarmUp_Client.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/MenuLibs/Common/Manialink/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/MenuLibs/Common/FontManager.Script.txt" as FontManager
#Include "Libs/Nadeo/TMNext/TrackMania/Menu/Constants.Script.txt" as MenuConsts
#Include "Libs/Nadeo/TMNext/TrackMania/ColorPalette.Script.txt" as ColorPalette
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_Champion_WarmUp"
#Const C_Type CUILayer::EUILayerType::Normal

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the module manialink
 *
 *  @return                           The module manialink
 */
Text GetML() {
	// L16 [Trackmania UI] Legend displayed above the label indicating the remaining number of warm up race
	declare Text_WarmUp = _("Warm up");

	return MV::Create(
C_Id, 3,
"""
<stylesheet>
	<style class="text-default" halign="center" valign="center2" textsize="3.5" textprefix="$t$i" textcolor="FFF" textfont="{{{FontManager::C_GameFontExtraBold}}}" />
	<style class="text-number" textfont="{{{FontManager::C_Oswald_Mono}}}" textemboss="1" textcolor="ffffff" textsize="2" />
</stylesheet>
<frame z-index="0" hidden="1" id="frame-global">
	<frame pos="153 13" id="frame-warm-up">
		<frame pos="-7.5 1" z-index="0">
			<quad size="30 8" z-index="-1" halign="center" valign="center2" colorize="{{{ColorPalette::C_Color_Orange}}}" image="{{{MenuConsts::C_ImageUrl_Champion_Spec_WarmUp_Left}}}" opacity="0.7"/>	
			<label z-index="3" size="25 5" halign="center" valign="center2" text="{{{Text_WarmUp}}}" class="text-default" textprefix="$t"/>
		</frame>
		<label pos="4 -4.2" z-index="1" size="40 6" halign="right" textsize="8" text="0 / 0" class="text-number" id="label-warm-up-progression" />
	</frame>
</frame>
""",
"""
#Include "Libs/Nadeo/ModeLibs/TrackMania/MV_Utils.Script.txt" as MV_Utils
""",
"""
***MainInit***
***
declare CMlFrame Frame_Global;
declare CMlFrame Frame_WarmUp;
declare CMlLabel Label_WarmUpProgression;

declare netread Integer Net_LibRaceWarmUp_WarmUpPlayedNb for Teams[0];
declare netread Integer Net_LibRaceWarmUp_WarmUpDuration for Teams[0];
declare netread Integer Net_LibRaceWarmUp_LayerPositionUpdate for Teams[0];
declare netread Vec3 Net_LibRaceWarmUp_LayerPosition for Teams[0];
	
declare Boolean DisplayModule;
declare Integer PrevWarmUpPlayedNb;
declare Integer PrevWarmUpDuration;
declare Integer PrevLayerPositionUpdate;
declare Boolean PrevLayerVisibility;
declare Boolean CurIsSpectator;
***

***MainStart***
***
Frame_Global <=> (Page.GetFirstChild("frame-global") as CMlFrame);
Frame_WarmUp <=> (Frame_Global.GetFirstChild("frame-warm-up") as CMlFrame);
Label_WarmUpProgression <=> (Frame_WarmUp.GetFirstChild("label-warm-up-progression") as CMlLabel);

DisplayModule = Frame_Global.Visible;
PrevWarmUpPlayedNb = -1;
PrevWarmUpDuration = -1;
PrevLayerPositionUpdate = -1;
PrevLayerVisibility = True;
CurIsSpectator = !Frame_WarmUp.Visible;
***

***MainLoop***
***
if (PageIsVisible) {
	declare Owner <=> MV_Utils::GetOwner(This);
	if (Owner != Null) {
		declare netread Boolean Net_Champion_WarmUp_IsVisible for Owner;
		if (DisplayModule != Net_Champion_WarmUp_IsVisible) {
			DisplayModule = Net_Champion_WarmUp_IsVisible;
			Frame_Global.Visible = Net_Champion_WarmUp_IsVisible;
		}
	}

	if (Owner == Null && DisplayModule) {
		DisplayModule = False;
		Frame_Global.Visible = DisplayModule;
	}

	if (Frame_Global.Visible) {
		if (PrevWarmUpPlayedNb != Net_LibRaceWarmUp_WarmUpPlayedNb || PrevWarmUpDuration != Net_LibRaceWarmUp_WarmUpDuration) {
			PrevWarmUpPlayedNb = Net_LibRaceWarmUp_WarmUpPlayedNb;
			PrevWarmUpDuration = Net_LibRaceWarmUp_WarmUpDuration;
			
			Label_WarmUpProgression.Value = Net_LibRaceWarmUp_WarmUpPlayedNb^" / "^Net_LibRaceWarmUp_WarmUpDuration;
		}

		if (PrevLayerPositionUpdate != Net_LibRaceWarmUp_LayerPositionUpdate) {
			PrevLayerPositionUpdate = Net_LibRaceWarmUp_LayerPositionUpdate;
			Frame_WarmUp.RelativePosition_V3 = <Net_LibRaceWarmUp_LayerPosition.X, Net_LibRaceWarmUp_LayerPosition.Y>;
			Frame_Global.ZIndex = Net_LibRaceWarmUp_LayerPosition.Z;
		}

		if (CurIsSpectator != (InputPlayer != Null && InputPlayer.SpawnStatus == CSmPlayer::ESpawnStatus::NotSpawned)) {
			CurIsSpectator = (InputPlayer != Null && InputPlayer.SpawnStatus == CSmPlayer::ESpawnStatus::NotSpawned);
			Frame_WarmUp.Visible = !CurIsSpectator;
		}
	}
}
***
""",
[],
[]
	);
}