/**
 *  UI module: Countdown server side
 */
#Const Version    "2020-01-23"
#Const ScriptName "ManiaApps/Nadeo/TMNext/TrackMania/Champion/UIModules/Countdown_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_Champion_Countdown"

#Const C_Target_Everyone 0
#Const C_Target_Players 1
#Const C_Target_Spectators 2

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set time limit
 *
 *	@param	_TimeLimit
 */
Void SetTimeLimit(Integer _TimeLimit) {
	declare netwrite Integer Net_Champion_Countdown_CutOffTimeLimit for Teams[0];
	Net_Champion_Countdown_CutOffTimeLimit = _TimeLimit;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Who will be able to see the UI
 *
 *	@param	_Target										The group that will be able to see the UI
 */
Void SetVisibleFor(Integer _Target) {
	declare netwrite Integer Net_Champion_Countdown_VisibilityTarget for Teams[0];
	Net_Champion_Countdown_VisibilityTarget = _Target;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	
	declare netwrite Boolean Net_Champion_Countdown_IsVisible for _Player;
	Net_Champion_Countdown_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;
	
	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	SetVisibleFor(C_Target_Everyone);
	
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}