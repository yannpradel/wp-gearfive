/**
 *  UI module: SpectatorInfo server side
 */
#Const Version    "2020-10-13"
#Const ScriptName "ManiaApps/Nadeo/TMNext/TrackMania/Champion/UIModules/SpectatorInfo_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_Champion_SpectatorInfo"

#Const C_RankingMode_BestRace 0
#Const C_RankingMode_CurrentRace 1

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Force an update of the UI
Void ForceUpdate() {
	declare netwrite Integer Net_Champion_SpectatorInfo_ForceUpdate for Teams[0];
	Net_Champion_SpectatorInfo_ForceUpdate = Now;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Update the points limit used to
 *	displayed finalist and winner status
 *	Cup mode
 */
Void SetPointsLimit(Integer _PointsLimit) {
	declare netwrite Integer Net_Champion_SpectatorInfo_PointsLimit for Teams[0];
	Net_Champion_SpectatorInfo_PointsLimit = _PointsLimit;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Set the ranking mode
Void SetRankingMode(Integer _RankingMode) {
	declare netwrite Integer Net_Champion_SpectatorInfo_RankingMode for Teams[0];
	Net_Champion_SpectatorInfo_RankingMode = _RankingMode;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	
	declare netwrite Boolean Net_Champion_SpectatorInfo_IsVisible for _Player;
	Net_Champion_SpectatorInfo_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;
	
	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	SetPointsLimit(-1);
	SetRankingMode(C_RankingMode_BestRace);
	
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}