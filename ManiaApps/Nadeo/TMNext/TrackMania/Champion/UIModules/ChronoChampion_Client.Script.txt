/**
 *  UI module: Chrono client side
 */
#Const Version    "2020-06-16"
#Const ScriptName "ManiaApps/Nadeo/TMNext/TrackMania/Champion/UIModules/ChronoChampion_Client.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/MenuLibs/Common/Manialink/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/MenuLibs/Common/FontManager.Script.txt" as FontManager

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_Champion_Chrono"
#Const C_Type CUILayer::EUILayerType::Normal

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the module manialink
 *
 *  @return                           The module manialink
 */
Text GetML() {
	return MV::Create(
C_Id, 3,
"""
<stylesheet>
	<style class="text-number" textfont="{{{FontManager::C_Oswald_Mono}}}" textcolor="ffffff" textsize="3" />
</stylesheet>
<frame z-index="-2" hidden="1" id="frame-global">
	<frame pos="0 -80" z-index="-5" hidden="1" id="frame-chrono">
		<label z-index="1" size="40 10" halign="center" valign="center" textsize="10" text="--:--.--" class="text-number" id="label-chrono" />
	</frame>
</frame>
""",
"""
#Include "TextLib" as TL
#Include "Libs/Nadeo/ModeLibs/TrackMania/MV_Utils.Script.txt" as MV_Utils
#Include "ManiaApps/Nadeo/TMxSM/Race/UIModules/Helpers_Client.Script.txt" as RaceHelpers
""",
"""
***MainInit***
***
declare CMlFrame Frame_Global;
declare CMlFrame Frame_Chrono;
declare CMlLabel Label_Chrono;

declare Boolean DisplayModule;
declare CSmPlayer::ESpawnStatus SpawnStatus;
declare CUIConfig::EUIStatus UIStatus;
***

***MainStart***
***
Frame_Global <=> (Page.GetFirstChild("frame-global") as CMlFrame);
Frame_Chrono <=> (Frame_Global.GetFirstChild("frame-chrono") as CMlFrame);
Label_Chrono <=> (Frame_Chrono.GetFirstChild("label-chrono") as CMlLabel);

DisplayModule = Frame_Global.Visible;
SpawnStatus = CSmPlayer::ESpawnStatus::NotSpawned;
UIStatus = CUIConfig::EUIStatus::None;
***

***MainLoop***
***
if (PageIsVisible) {
	declare Owner <=> MV_Utils::GetOwner(This);
	if (Owner != Null) {
		declare netread Boolean Net_Race_Chrono_IsVisible for Owner;
		if (InputPlayer != Null) {
			declare ShouldDisplayModule = (Net_Race_Chrono_IsVisible && (InputPlayer.SpawnStatus != CSmPlayer::ESpawnStatus::NotSpawned));
			if (DisplayModule != ShouldDisplayModule) {
				DisplayModule = ShouldDisplayModule;
				Frame_Global.Visible = ShouldDisplayModule;
			}
		}
	}

	if (Owner == Null && DisplayModule) {
		DisplayModule = False;
		Frame_Global.Visible = DisplayModule;
	}

	if (Frame_Global.Visible) {
		if (Owner != Null) {
			if (SpawnStatus != Owner.SpawnStatus) {
				SpawnStatus = Owner.SpawnStatus;
				Frame_Chrono.Visible = (
					SpawnStatus == CSmPlayer::ESpawnStatus::Spawning ||
					SpawnStatus == CSmPlayer::ESpawnStatus::Spawned
				);
			}

			if (Frame_Chrono.Visible) {
				RaceHelpers::UpdatePlayerChronoLabel(Teams[0], Label_Chrono, Owner);

				if (UI != Null && UIStatus != UI.UIStatus) {
					UIStatus = UI.UIStatus;
					switch (UI.UIStatus) {
						case CUIConfig::EUIStatus::Warning: Label_Chrono.TextColor = <1., 0.6, 0.>;
						case CUIConfig::EUIStatus::Error: Label_Chrono.TextColor = <1., 0., 0.>;
						case CUIConfig::EUIStatus::Official: Label_Chrono.TextColor = <0., 0.6, 0.>;
						default: Label_Chrono.TextColor = <1., 1., 1.>;
					}
				}
			}
		}
	}
}
***
""",
[],
[]
	);
}