/**
 *  Base for a standard game mode mania app
 */
#RequireContext CManiaAppPlayground
#Const C_AppBase_Version     "1.1.0"
#Const C_AppBase_ScriptName  "ManiaApps/Nadeo/CMGame/Modes/AppBase.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Components/Navigation.Script.txt" as Navigation
#Include "Libs/Nadeo/CMGame/Menus/Preload.Script.txt" as Preload
#Include "Libs/Nadeo/CMGame/Modes/ClientUI.Script.txt" as ClientUI
#Include "Libs/Nadeo/CMGame/Modes/Markers_Client.Script.txt" as Markers
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Client.Script.txt" as UIModules
#Include "Libs/Nadeo/CMGame/Utils/AudioManager_MA.Script.txt" as AudioManager
#Include "Libs/Nadeo/CMGame/Utils/Constants.Script.txt" as Const
#Include "Libs/Nadeo/CMGame/Utils/Env.Script.txt" as Env
#Include "Libs/Nadeo/CMGame/Utils/Layers.Script.txt" as Layers
#Include "Libs/Nadeo/CMGame/Utils/Log.Script.txt" as Log
#Include "Libs/Nadeo/CMGame/Utils/MenuSceneManager.Script.txt" as MenuSceneManager
#Include "Libs/Nadeo/CMGame/Utils/NotificationManager.Script.txt" as NotificationMgr

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Settings
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Setting S_ScriptEnvironment "production" as "<hidden>" ///< Environment in which the script runs

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Extends
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
***LogVersions***
***
Log::RegisterScript(Env::ScriptName, Env::Version);
Log::RegisterScript(Log::ScriptName, Log::Version);
Log::RegisterScript(AudioManager::ScriptName, AudioManager::Version);
Log::RegisterScript(Layers::ScriptName, Layers::Version);
Log::RegisterScript(UIModules::ScriptName, UIModules::Version);
Log::RegisterScript(ClientUI::ScriptName, ClientUI::Version);
Log::RegisterScript(Markers::ScriptName, Markers::Version);
Log::RegisterScript(Navigation::ScriptName, Navigation::Version);
Log::RegisterScript(Preload::ScriptName, Preload::Version);
***

***LoadLibraries***
***
// Must be loaded before other libraries
Env::Load();
Env::Set(S_ScriptEnvironment);
Log::Load();
Layers::Load();
UIModules::Load();
ClientUI::Load();
Navigation::Load(This);
Preload::Initialize(This);
AudioManager::Load(Const::C_JsonFilePath_AudioCommon, Const::C_JsonFilePath_AudioMenu, Const::C_JsonFilePath_AudioGame);
while (AudioManager::IsLoading()) App_Yield();
AudioManager::CreateAudioSources();
Markers::Load();
NotificationMgr::Load();
***

***UnloadLibraries***
***
Markers::Unload();
AudioManager::Unload();
Navigation::Unload(This);
ClientUI::Unload();
UIModules::Unload();
Layers::Unload();
Log::Unload();
Env::Unload();
NotificationMgr::Unload();
***

***Yield***
***
UIModules::Yield();
AudioManager::Yield(This);
NotificationMgr::Yield();
***

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** yield; the script
 *  This should be the only place
 *  in the complete mania app where
 *  the script yields
 */
Void App_Yield() {
	yield;
	+++Yield+++
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Main
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
main() {
	LayersDefaultManialinkVersion = 3;
	EnableMenuNavigationInputs = False;
	MenuSceneManager::IncrementSceneCount(LocalUser);

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
	// Settings
	+++Settings+++

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
	// Load libraries
	+++LoadLibraries+++

	+++LogVersions+++
	Log::DisplayScripts();

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
	// Init app and config
	+++InitApp+++

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
	// Start app
	+++StartApp+++

	while(True) {
		App_Yield();
		+++AppLoop+++
	}

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
	// Stop app and cleanup
	+++EndApp+++

	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
	// Unload libraries
	+++UnloadLibraries+++
}