/**
 *	Define the style of our different projects
 *	See: https://confluence.ubisoft.com/pages/viewpage.action?pageId=2092180658
 */
#Const Version "1.1.2"
#Const ScriptName "Libs/Nadeo/CMGame/Utils/Stylesheet.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "ColorLib" as CL

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Structures
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Struct K_Color {
	Text Hex6;
	Vec3 RGB;
}
#Struct K_Theme {
	Integer Id;
	K_Color[Integer] Colors;
	Text[Integer] Fonts;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Themes
#Const C_ThemeId_Null 0
#Const C_ThemeId_Default 1
#Const C_ThemeId_Trackmania 2
#Const C_ThemeId_Questmania 3
#Const C_ThemeId_MapType 4

// Color codes
#Const C_ColorHex6_GreenFive "000A05"
#Const C_ColorHex6_GreenFour "003228"
#Const C_ColorHex6_GreenThree "005F46"
#Const C_ColorHex6_GreenTwo "009B5F"
#Const C_ColorHex6_GreenOne "6EFAA0"

#Const C_ColorHex6_BlueFive "00050A"
#Const C_ColorHex6_BlueFour "002832"
#Const C_ColorHex6_BlueThree "00465F"
#Const C_ColorHex6_BlueTwo "005F9B"
#Const C_ColorHex6_BlueOne "6EA0FA"

#Const C_ColorHex6_Default "808080"
#Const C_ColorHex6_Black "000000"
#Const C_ColorHex6_RichBlack "000514" //< aka DarkBlue
#Const C_ColorHex6_Night "101010"
#Const C_ColorHex6_White "FFFFFF"
#Const C_ColorHex6_AntiFlashWhite "EEEEEE"
#Const C_ColorHex6_Silver "AAAAAA"
#Const C_ColorHex6_Grape "7030A0"
#Const C_ColorHex6_HarvestGold "E8AB00"
#Const C_ColorHex6_Red "FF0D0D"
#Const C_ColorHex6_TurkeyRed "AA0D0D"
#Const C_ColorHex6_Coquelicot "FF3D1D"
#Const C_ColorHex6_SchoolBusYellow "F9DC25"
#Const C_ColorHex6_PersianBlue "263FA8"
#Const C_ColorHex6_ShamrockGreen "009B5F" //< aka GreenTwo
#Const C_ColorHex6_Pumpkin "FF6E00"
#Const C_ColorHex6_BrightPink "F25C84"
#Const C_ColorHex6_MedalGold "FBAE17"
#Const C_ColorHex6_MedalSilver "B3B3B3"
#Const C_ColorHex6_MedalBronze "C95A24"
#Const C_ColorHex6_MedalAuthorLight "00FF15"
#Const C_ColorHex6_MedalGoldLight "E8C11A"
#Const C_ColorHex6_MedalSilverLight "B5BCC6"
#Const C_ColorHex6_MedalBronzeLight "DD824B"
#Const C_ColorHex6_EngineeringOrange "CE0000"

// Color names
#Const C_Color_AccentOne 1
#Const C_Color_AccentTwo 2
#Const C_Color_AccentThree 3
#Const C_Color_AccentFour 4
#Const C_Color_AccentFive 5

#Const C_Color_WarmUp 1001 //< Everything warm-up related
#Const C_Color_CupFinalist 1002 //< Finalist status in Cup game mode
#Const C_Color_FadeOutDark 1003 //< Fade out screen color
#Const C_Color_MedalGold 1004 //< Gold medal color
#Const C_Color_MedalSilver 1005 //< Silver medal color
#Const C_Color_MedalBronze 1006 //< Bronze medal color
#Const C_Color_MedalAuthorLight 1007 //< Lighter author medal color
#Const C_Color_MedalGoldLight 1008 //< Lighter gold medal color
#Const C_Color_MedalSilverLight 1009 //< Lighter silver medal color
#Const C_Color_MedalBronzeLight 1010 //< Lighter bronze medal color

#Const C_Color_TextDark 2001 //< Text on high luminance background
#Const C_Color_TextLight 2002 //< Text on low luminance background
#Const C_Color_TextSecondary 2003 //< Text of secondary importance
#Const C_Color_TextValueWorse 2004 //< Text displaying a value worse than the previous one, eg: slower time, lose a rank
#Const C_Color_TextValueSame 2005 //< Text displaying a value identical to the previous one, eg: same time, same rank
#Const C_Color_TextValueBetter 2006 //< Text displaying a value better than the previous one, eg: fastest time, gained a rank
#Const C_Color_TextStarRating 2007 //< Color of the star icons in the 5 stars ranking widget
#Const C_Color_TextError 2008 //< Text descripting an error
#Const C_Color_TextWarning 2009 //< Text descripting a warning
#Const C_Color_TextOwnTime 2010 //< Text displaying the time of the player in a list with times from different players

#Const C_Color_BGBlack 3001 //< Truly black background
#Const C_Color_BGDark 3002 //< Dark background
#Const C_Color_BGDarkFocused 3003 //< Dark background when focused
#Const C_Color_BGDarkLight 3004 //< Still dark background but lighter
#Const C_Color_BGLight 3005 //< Light background
#Const C_Color_BGDanger 3006 //< Background for elements that have an important impact, eg: a delete button
#Const C_Color_BGBrowserFolder 3007 //< Folder in the file browser
#Const C_Color_BGValueWorse 3008 //< Background displaying a value worse than the previous one, eg: slower time, lose a rank
#Const C_Color_BGValueSame 3009 //< Background displaying a value identical to the previous one, eg: same time, same rank
#Const C_Color_BGValueBetter 3010 //< Background displaying a value better than the previous one, eg: fastest time, gained a rank

#Const C_Color_HotseatOrange 4001
#Const C_Color_HotseatPink 4002
#Const C_Color_HotseatRed 4003
#Const C_Color_HotseatGreen 4004
#Const C_Color_HotseatBlue 4005
#Const C_Color_HotseatYellow 4006
#Const C_Color_HotseatBlack 4007
#Const C_Color_HotseatWhite 4008

#Const C_Color_TeamBlue 5001 //< Alternative color for the Blue team (Teams[0]) in game modes
#Const C_Color_TeamRed 5002 //< Alternative color for the Red team (Teams[1]) in game modes

#Const C_Color_ComponentSearchBackground 6001 //< Background of the search component text edit
#Const C_Color_ComponentSearchFocus 6002 //< Outline of the search component text edit during edition
#Const C_Color_ComponentButtonOutlineFocus 6003 //< Outline of the button component when focused
#Const C_Color_ComponentExpendableButtonDangerOutlineFocus 6004 //< Outline of the expendable button component in danger mode when focused

#Const C_Color_IconDark 7001 //< Icon on high luminance background
#Const C_Color_IconLight 7002 //< Icon on low luminance background

// Font paths
#Const C_FontRaw_Default "GameFontSemiBold"
#Const C_FontRaw_Oswald_Regular "Oswald"
#Const C_FontRaw_Oswald_Mono "OswaldMono"
#Const C_FontRaw_GameFont_Black "GameFontBlack"
#Const C_FontRaw_GameFont_ExtraBold "GameFontExtraBold"
#Const C_FontRaw_GameFont_SemiBold "GameFontSemiBold"
#Const C_FontRaw_GameFont_Regular "GameFontRegular"

// Font names
#Const C_Font_ErrorMessage 1
#Const C_Font_IngameTime 2
#Const C_Font_Weight_Black 3
#Const C_Font_Weight_ExtraBold 4
#Const C_Font_Weight_SemiBold 5
#Const C_Font_Weight_Regular 6

#Const C_Color_Null K_Color {
	Hex6 = "808080",
	RGB = <0.5, 0.5, 0.5>
}
#Const C_Theme_Null K_Theme {
	Id = 0,
	Colors = [],
	Fonts = []
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Set the theme to use in the title
Void SetTheme(Integer _ThemeId, Boolean _IsInitialization) {
	declare K_Theme CMGame_Stylesheet_Theme for System = C_Theme_Null;
	if (!_IsInitialization && CMGame_Stylesheet_Theme.Id == _ThemeId) return;

	declare Text[Integer][Integer] Colors = [
		C_Color_AccentOne => [
			C_ThemeId_Default => C_ColorHex6_GreenOne,
			C_ThemeId_Trackmania => C_ColorHex6_GreenOne,
			C_ThemeId_Questmania => C_ColorHex6_BlueOne,
			C_ThemeId_MapType => C_ColorHex6_AntiFlashWhite
		],
		C_Color_AccentTwo => [
			C_ThemeId_Default => C_ColorHex6_GreenTwo,
			C_ThemeId_Trackmania => C_ColorHex6_GreenTwo,
			C_ThemeId_Questmania => C_ColorHex6_BlueTwo,
			C_ThemeId_MapType => C_ColorHex6_BlueFour
		],
		C_Color_AccentThree => [
			C_ThemeId_Default => C_ColorHex6_GreenThree,
			C_ThemeId_Trackmania => C_ColorHex6_GreenThree,
			C_ThemeId_Questmania => C_ColorHex6_BlueThree,
			C_ThemeId_MapType => C_ColorHex6_BlueThree
		],
		C_Color_AccentFour => [
			C_ThemeId_Default => C_ColorHex6_GreenFour,
			C_ThemeId_Trackmania => C_ColorHex6_GreenFour,
			C_ThemeId_Questmania => C_ColorHex6_BlueFour,
			C_ThemeId_MapType => C_ColorHex6_BlueFour
		],
		C_Color_AccentFive => [
			C_ThemeId_Default => C_ColorHex6_GreenFive,
			C_ThemeId_Trackmania => C_ColorHex6_GreenFive,
			C_ThemeId_Questmania => C_ColorHex6_BlueFive,
			C_ThemeId_MapType => C_ColorHex6_RichBlack
		],
		C_Color_WarmUp => [
			C_ThemeId_Default => C_ColorHex6_Pumpkin
		],
		C_Color_CupFinalist => [
			C_ThemeId_Default => C_ColorHex6_Red
		],
		C_Color_FadeOutDark => [
			C_ThemeId_Default => C_ColorHex6_Black
		],
		C_Color_MedalGold => [
			C_ThemeId_Default => C_ColorHex6_MedalGold
		],
		C_Color_MedalSilver => [
			C_ThemeId_Default => C_ColorHex6_MedalSilver
		],
		C_Color_MedalBronze => [
			C_ThemeId_Default => C_ColorHex6_MedalBronze
		],
		C_Color_MedalAuthorLight => [
			C_ThemeId_Default => C_ColorHex6_MedalAuthorLight
		],
		C_Color_MedalGoldLight => [
			C_ThemeId_Default => C_ColorHex6_MedalGoldLight
		],
		C_Color_MedalSilverLight => [
			C_ThemeId_Default => C_ColorHex6_MedalSilverLight
		],
		C_Color_MedalBronzeLight => [
			C_ThemeId_Default => C_ColorHex6_MedalBronzeLight
		],
		C_Color_TextDark => [
			C_ThemeId_Default => C_ColorHex6_Black
		],
		C_Color_TextLight => [
			C_ThemeId_Default => C_ColorHex6_White
		],
		C_Color_TextSecondary => [
			C_ThemeId_Default => C_ColorHex6_Silver
		],
		C_Color_TextValueWorse => [
			C_ThemeId_Default => C_ColorHex6_Coquelicot
		],
		C_Color_TextValueSame => [
			C_ThemeId_Default => C_ColorHex6_Silver
		],
		C_Color_TextValueBetter => [
			C_ThemeId_Default => C_ColorHex6_ShamrockGreen
		],
		C_Color_TextStarRating => [
			C_ThemeId_Default => C_ColorHex6_HarvestGold
		],
		C_Color_TextError => [
			C_ThemeId_Default => C_ColorHex6_EngineeringOrange
		],
		C_Color_TextWarning => [
			C_ThemeId_Default => C_ColorHex6_SchoolBusYellow
		],
		C_Color_TextOwnTime => [
			C_ThemeId_Default => C_ColorHex6_SchoolBusYellow
		],
		C_Color_BGBlack => [
			C_ThemeId_Default => C_ColorHex6_Black
		],
		C_Color_BGDark => [
			C_ThemeId_Default => C_ColorHex6_RichBlack
		],
		C_Color_BGDarkFocused => [
			C_ThemeId_Default => C_ColorHex6_PersianBlue
		],
		C_Color_BGDarkLight => [
			C_ThemeId_Default => C_ColorHex6_Silver
		],
		C_Color_BGLight => [
			C_ThemeId_Default => C_ColorHex6_AntiFlashWhite
		],
		C_Color_BGDanger => [
			C_ThemeId_Default => C_ColorHex6_Red
		],
		C_Color_BGBrowserFolder => [
			C_ThemeId_Default => C_ColorHex6_SchoolBusYellow
		],
		C_Color_BGValueWorse => [
			C_ThemeId_Default => C_ColorHex6_Coquelicot
		],
		C_Color_BGValueSame => [
			C_ThemeId_Default => C_ColorHex6_Silver
		],
		C_Color_BGValueBetter => [
			C_ThemeId_Default => C_ColorHex6_ShamrockGreen
		],
		C_Color_HotseatOrange => [
			C_ThemeId_Default => C_ColorHex6_Pumpkin
		],
		C_Color_HotseatPink => [
			C_ThemeId_Default => C_ColorHex6_BrightPink
		],
		C_Color_HotseatRed => [
			C_ThemeId_Default => C_ColorHex6_Red
		],
		C_Color_HotseatGreen => [
			C_ThemeId_Default => C_ColorHex6_ShamrockGreen
		],
		C_Color_HotseatBlue => [
			C_ThemeId_Default => C_ColorHex6_PersianBlue
		],
		C_Color_HotseatYellow => [
			C_ThemeId_Default => C_ColorHex6_SchoolBusYellow
		],
		C_Color_HotseatBlack => [
			C_ThemeId_Default => C_ColorHex6_Night
		],
		C_Color_HotseatWhite => [
			C_ThemeId_Default => C_ColorHex6_White
		],
		C_Color_TeamBlue => [
			C_ThemeId_Default => C_ColorHex6_PersianBlue
		],
		C_Color_TeamRed => [
			C_ThemeId_Default => C_ColorHex6_Red
		],
		C_Color_ComponentSearchBackground => [
			C_ThemeId_Default => C_ColorHex6_Grape
		],
		C_Color_ComponentSearchFocus => [
			C_ThemeId_Default => C_ColorHex6_AntiFlashWhite
		],
		C_Color_ComponentButtonOutlineFocus => [
			C_ThemeId_Default => C_ColorHex6_White
		],
		C_Color_ComponentExpendableButtonDangerOutlineFocus => [
			C_ThemeId_Default => C_ColorHex6_White
		],
		C_Color_IconDark => [
			C_ThemeId_Default => C_ColorHex6_Black
		],
		C_Color_IconLight => [
			C_ThemeId_Default => C_ColorHex6_White
		]
	];

	declare Text[Integer][Integer] Fonts = [
		C_Font_ErrorMessage => [
			C_ThemeId_Default => C_FontRaw_GameFont_SemiBold
		],
		C_Font_IngameTime => [
			C_ThemeId_Default => C_FontRaw_Oswald_Mono
		],
		C_Font_Weight_Black => [
			C_ThemeId_Default => C_FontRaw_GameFont_Black
		],
		C_Font_Weight_ExtraBold => [
			C_ThemeId_Default => C_FontRaw_GameFont_ExtraBold
		],
		C_Font_Weight_SemiBold => [
			C_ThemeId_Default => C_FontRaw_GameFont_SemiBold
		],
		C_Font_Weight_Regular => [
			C_ThemeId_Default => C_FontRaw_GameFont_Regular
		]
	];

	CMGame_Stylesheet_Theme = C_Theme_Null;
	CMGame_Stylesheet_Theme.Id = _ThemeId;

	foreach (ColorId => ThemeColors in Colors) {
		if (ThemeColors.existskey(_ThemeId)) {
			declare Text Hex6Color = ThemeColors[_ThemeId];
			CMGame_Stylesheet_Theme.Colors[ColorId] = K_Color {
				Hex6 = Hex6Color,
				RGB = CL::Hex6ToRgb(Hex6Color)
			};
		} else {
			declare Text Hex6Color = ThemeColors.get(C_ThemeId_Default, C_ColorHex6_Default);
			CMGame_Stylesheet_Theme.Colors[ColorId] = K_Color {
				Hex6 = Hex6Color,
				RGB = CL::Hex6ToRgb(Hex6Color)
			};
		}
	}

	foreach (FontId => ThemeFonts in Fonts) {
		if (ThemeFonts.existskey(_ThemeId)) {
			CMGame_Stylesheet_Theme.Fonts[FontId] = ThemeFonts[_ThemeId];
		} else {
			CMGame_Stylesheet_Theme.Fonts[FontId] = ThemeFonts.get(C_ThemeId_Default, C_FontRaw_Default);
		}
	}
}
Void InitializeTheme(Integer _ThemeId) {
	SetTheme(_ThemeId, True);
}
Void SetTheme(Integer _ThemeId) {
	SetTheme(_ThemeId, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the theme used in the title
K_Theme GetTheme() {
	declare K_Theme CMGame_Stylesheet_Theme for System = C_Theme_Null;
	return CMGame_Stylesheet_Theme;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get a color in K_Color format for the given theme
K_Color GetColor(K_Theme _Theme, Integer _ColorId) {
	if (_Theme.Id == C_ThemeId_Null) {
		log("WARNING [CMGame/Stylesheet] You must define a theme with the `SetTheme()` function before trying to get a color.");
	}
	return _Theme.Colors.get(_ColorId, C_Color_Null);
}
K_Color GetColor(Integer _ColorId) {
	return GetColor(GetTheme(), _ColorId);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get a color in Hex6 format for the given theme
Text GetColorHex6(K_Theme _Theme, Integer _ColorId) {
	return GetColor(_Theme, _ColorId).Hex6;
}
Text GetColorHex6(Integer _ColorId) {
	return GetColorHex6(GetTheme(), _ColorId);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get a color in RGB format for the given theme
Vec3 GetColorRGB(K_Theme _Theme, Integer _ColorId) {
	return GetColor(_Theme, _ColorId).RGB;
}
Vec3 GetColorRGB(Integer _ColorId) {
	return GetColorRGB(GetTheme(), _ColorId);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get a font for the given theme
Text GetFont(K_Theme _Theme, Integer _FontId) {
	if (_Theme.Id == C_ThemeId_Null) {
		log("WARNING [CMGame/Stylesheet] You must define a theme with the `SetTheme()` function before trying to get a font.");
	}
	return _Theme.Fonts.get(_FontId, C_FontRaw_Default);
}
Text GetFont(Integer _FontId) {
	return GetFont(GetTheme(), _FontId);
}