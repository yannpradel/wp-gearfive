/**
 *	Assets for Trackmania
 *
 *	Available styles
 *	----------
 *  - `C_Style_EdgesRounded`: set rounded edges to the asset
 *  - `C_Style_EdgesStraightSmall`: set small straight edges to the asset
 *  - `C_Style_TopEdgesRoundedVertical`: set top rounded edges to the asset (vertical means the asset has no skew)
 *  - `C_Style_BothRoundedEdgesVertical`: set top and bottom rounded edges to the asset (vertical means the asset has no skew)
 *  - `C_Style_LeftEdgeRounded`: set rounded edges only on the left side of the asset
 *  - `C_Style_RightEdgeRounded`: set rounded edges only on the right side of the asset
 *  - `C_Style_RightEdgeSoloRounded`: set rounded edges on the right side of the asset and nothing on the other side
 *  - `C_Style_ContourRounded`: asset with rounded contours
 *  - `C_Style_ContourStraight`: asset with straight contours
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/CMGame/Components/ExpendableAsset.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Components/ExpendableAssetBase.Script.txt" as ExpendableAssetBase
#Include "Libs/Nadeo/CMGame/Utils/ButtonStyles.Script.txt" as ButtonStyles
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_OverloadName "component-trackmania-expendable-asset"
#Const ExpendableAssetBase::C_Name as C_Name
#Const ExpendableAssetBase::P as P
#Const ExpendableAssetBase::Q as Q

#Const ExpendableAssetBase::C_ColorMode_None as C_ColorMode_None
#Const ExpendableAssetBase::C_ColorMode_Colorize as C_ColorMode_Colorize
#Const ExpendableAssetBase::C_ColorMode_Modulate as C_ColorMode_Modulate
#Const ExpendableAssetBase::C_ColorMode_Background as C_ColorMode_Background

#Const C_Style_EdgesRounded "component-trackmania-expendable-asset-style-edges-rounded"
#Const C_Style_EdgesStraightSmall "component-trackmania-expendable-asset-style-edges-straight-small"
#Const C_Style_TopEdgesRoundedVertical "component-trackmania-expendable-asset-style-edges-rounded-vertical"
#Const C_Style_BothRoundedEdgesVertical "component-trackmania-expendable-asset-style-both-edges-rounded-vertical"
#Const C_Style_LeftEdgeRounded "component-trackmania-expendable-asset-style-left-edge-rounded"
#Const C_Style_RightEdgeRounded "component-trackmania-expendable-asset-style-right-edge-rounded"
#Const C_Style_RightEdgeSoloRounded "component-trackmania-expendable-asset-style-right-edge-solo-rounded"
#Const C_Style_ContourStraight "component-trackmania-expendable-asset-style-contour-straight"
#Const C_Style_ContourRounded "component-trackmania-expendable-asset-style-contour-rounded"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// When two libraries are merged in the same namespance
// only the constants from the first libraries are accessible
// We have to proxy the constants through functions to make them accessible
Text Style_EdgesRounded() { return C_Style_EdgesRounded; }
Text Style_EdgesStraightSmall() { return C_Style_EdgesStraightSmall; }
Text Style_TopEdgesRoundedVertical() { return C_Style_TopEdgesRoundedVertical; }
Text Style_BothRoundedEdgesVertical() { return C_Style_BothRoundedEdgesVertical; }
Text Style_LeftEdgeRounded() { return C_Style_LeftEdgeRounded; }
Text Style_RightEdgeRounded() { return C_Style_RightEdgeRounded; }
Text Style_ContourStraight() { return C_Style_ContourStraight; }
Text Style_ContourRounded() { return C_Style_ContourRounded; }

Void Trackmania_MainInit(CMlScript _This) {
	ExpendableAssetBase::SetAssetsDefaultProperties(_This, ExpendableAssetBase::K_Properties {
		Enabled = [
			ExpendableAssetBase::C_Property_Height,
			ExpendableAssetBase::C_Property_Width,
			ExpendableAssetBase::C_Property_HAlign,
			ExpendableAssetBase::C_Property_VAlign,
			ExpendableAssetBase::C_Property_Images,
			ExpendableAssetBase::C_Property_Color,
			ExpendableAssetBase::C_Property_Opacity,
			ExpendableAssetBase::C_Property_SuperSample
		],
		Height = 10.,
		Width = 60.,
		HAlign = CMlControl::AlignHorizontal::HCenter,
		VAlign = CMlControl::AlignVertical::VCenter,
		Images = [
			ExpendableAssetBase::C_Position_Left => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonStraight_Start,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				ColorMode = ExpendableAssetBase::C_ColorMode_Background
			},
			ExpendableAssetBase::C_Position_Right => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonStraight_End,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			}
		],
		Color = <1., 1., 1.>,
		Opacity = 1.,
		SuperSample = False
	});

	ExpendableAssetBase::CreateStyle(_This, C_Style_EdgesRounded, ExpendableAssetBase::K_Properties {
		Enabled = [ExpendableAssetBase::C_Property_Images],
		Images = [
			ExpendableAssetBase::C_Position_Left => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_Start,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				ColorMode = ExpendableAssetBase::C_ColorMode_Background
			},
			ExpendableAssetBase::C_Position_Right => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_End,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			}
		]
	});

	ExpendableAssetBase::CreateStyle(_This, C_Style_EdgesStraightSmall, ExpendableAssetBase::K_Properties {
		Enabled = [ExpendableAssetBase::C_Property_Images],
		Images = [
			ExpendableAssetBase::C_Position_Left => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonStraight_Small_Start,
				Size = <12., 56.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				ColorMode = ExpendableAssetBase::C_ColorMode_Background
			},
			ExpendableAssetBase::C_Position_Right => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonStraight_Small_End,
				Size = <12., 56.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			}
		]
	});

	ExpendableAssetBase::CreateStyle(_This, C_Style_TopEdgesRoundedVertical, ExpendableAssetBase::K_Properties {
		Enabled = [ExpendableAssetBase::C_Property_Images],
		Images = [
			ExpendableAssetBase::C_Position_Left => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_Start_Vertical_Top,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				ColorMode = ExpendableAssetBase::C_ColorMode_Background
			},
			ExpendableAssetBase::C_Position_Right => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_End_Vertical_Top,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			}
		]
	});

	ExpendableAssetBase::CreateStyle(_This, C_Style_BothRoundedEdgesVertical, ExpendableAssetBase::K_Properties {
		Enabled = [ExpendableAssetBase::C_Property_Images],
		Images = [
			ExpendableAssetBase::C_Position_Left => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_Start_Vertical_Both,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				ColorMode = ExpendableAssetBase::C_ColorMode_Background
			},
			ExpendableAssetBase::C_Position_Right => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_End_Vertical_Both,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			}
		]
	});

	ExpendableAssetBase::CreateStyle(_This, C_Style_LeftEdgeRounded, ExpendableAssetBase::K_Properties {
		Enabled = [ExpendableAssetBase::C_Property_Images],
		Images = [
			ExpendableAssetBase::C_Position_Left => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_Start,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				ColorMode = ExpendableAssetBase::C_ColorMode_Background
			}
		]
	});

	ExpendableAssetBase::CreateStyle(_This, C_Style_RightEdgeRounded, ExpendableAssetBase::K_Properties {
		Enabled = [ExpendableAssetBase::C_Property_Images],
		Images = [
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				ColorMode = ExpendableAssetBase::C_ColorMode_Background
			},
			ExpendableAssetBase::C_Position_Right => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_End,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			}
		]
	});

	ExpendableAssetBase::CreateStyle(_This, C_Style_RightEdgeSoloRounded, ExpendableAssetBase::K_Properties {
		Enabled = [ExpendableAssetBase::C_Property_Images],
		Images = [
			ExpendableAssetBase::C_Position_Left => ExpendableAssetBase::K_Image {
				ColorMode = ExpendableAssetBase::C_ColorMode_Background
			},
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				ColorMode = ExpendableAssetBase::C_ColorMode_Background
			},
			ExpendableAssetBase::C_Position_Right => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_End,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			}
		]
	});

	ExpendableAssetBase::CreateStyle(_This, C_Style_ContourStraight, ExpendableAssetBase::K_Properties {
		Enabled = [ExpendableAssetBase::C_Property_Images],
		Images = [
			ExpendableAssetBase::C_Position_Left => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonStraight_StartContour,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonStraight_MiddleContour,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Right => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonStraight_EndContour,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			}
		]
	});

	ExpendableAssetBase::CreateStyle(_This, C_Style_ContourRounded, ExpendableAssetBase::K_Properties {
		Enabled = [ExpendableAssetBase::C_Property_Images],
		Images = [
			ExpendableAssetBase::C_Position_Left => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_StartContour,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Middle => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_MiddleContour,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			},
			ExpendableAssetBase::C_Position_Right => ExpendableAssetBase::K_Image {
				Url = ButtonStyles::C_ImageUrl_Common_ButtonRounded_EndContour,
				Size = <128., 256.>,
				ColorMode = ExpendableAssetBase::C_ColorMode_Colorize
			}
		]
	});
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the component
 *
 *	@return														The component id
 */
Text ComponentV2() {
	return MV::ComponentV2(
		C_OverloadName,
		"""
		""",
		"""
#Include "Libs/Nadeo/CMGame/Components/ExpendableAsset.Script.txt" as {{{Q}}}
		""",
		"""
***MainInit***
***
{{{P}}}Trackmania_MainInit(This);
***
		""",
		[ExpendableAssetBase::ComponentV2()],
		[]
	);
}