/**
 *	Component: MenuButtonList
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/CMGame/Components/MenuButtonList.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "TextLib" as TL
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/CMGame/Utils/Stylesheet.Script.txt" as Stylesheet
#Include "Libs/Nadeo/CMGame/Components/ButtonsList2.Script.txt" as ButtonsList

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Name "component-menu-button-list" //< Component name
#Const P "ComponentMenuButtonList_" //< Prefix used to differentiate functions/variables in the script

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the component
 *
 *	@return														The component id
 */
Text Component() {
	declare Text[Text] Buttons = ["A" => _("Select"), "B" => _("Back")];
	declare Text ButtonsJson = TL::MLEncode(Buttons.tojson());

	return MV::Component(
C_Name,
"""
<frame id="{{{P}}}frame-global">
	<frameinstance modelid="{{{ButtonsList::C_Name}}}"
		id="{{{P}}}frame-button-list"
		z-index="2"
		pos="160 -92"
		data-buttons="{{{ButtonsJson}}}"
		data-halign="right"
		data-valign="bottom"
		data-buttonmaxwidth="50."
		data-textprefix="$t"
		data-textfont="{{{Stylesheet::GetFont(Stylesheet::C_Font_Weight_SemiBold)}}}"
		data-buttons-spacing="5."
	/>
</frame>
""",
"""
#Include "Libs/Nadeo/CMGame/Utils/Tools.Script.txt" as {{{P}}}Tools
""",
"""
declare CMlFrame {{{P}}}G_Frame_ButtonList;

Void {{{P}}}SetButtons(CMlFrame _Frame_ButtonList, Text[Text] _ButtonsList) {
	if (_Frame_ButtonList != Null) {
		declare CMlFrame Frame_ButtonList <=> (_Frame_ButtonList.GetFirstChild("{{{P}}}frame-button-list") as CMlFrame);
		if ({{{P}}}G_Frame_ButtonList != Frame_ButtonList) {
			if ({{{P}}}G_Frame_ButtonList != Null) {{{ButtonsList::P}}}SetButtons({{{P}}}G_Frame_ButtonList, []); // reset previous Frame buttons
				{{{P}}}G_Frame_ButtonList <=> Frame_ButtonList;
		}
		if ({{{P}}}G_Frame_ButtonList != Null) {{{ButtonsList::P}}}SetButtons({{{P}}}G_Frame_ButtonList, _ButtonsList);
	}
}

***MainInit***
***
declare CMlFrame {{{P}}}Frame_Global;
***

***MainStart***
***
{{{P}}}Frame_Global <=> (Page.GetFirstChild("{{{P}}}frame-global") as CMlFrame);

{{{P}}}G_Frame_ButtonList = Null;
***

***MainLoop***
***
if ({{{P}}}Frame_Global.Parent.Visible && {{{P}}}G_Frame_ButtonList != Null) {
	if ({{{P}}}G_Frame_ButtonList.Visible == {{{P}}}Tools::IsUsingMouse(Input)) {
		{{{P}}}G_Frame_ButtonList.Visible = !{{{P}}}Tools::IsUsingMouse(Input);
	}
}
***
""",
[ButtonsList::Component()],
[]
	);
}