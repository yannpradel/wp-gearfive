/**
 *  Component : PlayerAPI
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/CMGame/API/PlayerAPI.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Utils/Http.Script.txt" as Http
#Include "Libs/Nadeo/CMGame/Utils/Config.Script.txt" as Config

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_API_Player "/api/token/player"
#Const C_Headers [
	"Accept" => "application/json",
	"Content-Type" => "application/json"
]

#Const C_Route_GetLatencyResult "/latency-result"
#Const C_Route_PostSaveLatencyResult "/latency-result/save"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Structures
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Struct K_HttpResponseFromGetLatencyResult {
	Integer personalBest;
	Integer average;
}
#Struct K_ResponseFromGetLatencyResult {
	Integer PersonalBest;
	Integer Average;
}

#Struct K_HttpPostSaveLatencyResult {
	Integer latency;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Start a request to get the latency result
 *
 *	@return				The request
 */
Http::K_Request GetLatencyResult() {
	return Http::CreateGet(Config::Get().APIBaseUrl^C_API_Player^C_Route_GetLatencyResult, C_Headers);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Parse the response to the GetLatencyResult request
K_ResponseFromGetLatencyResult GetResponseFromGetLatencyResult(Http::K_Request _Request) {
	declare K_HttpResponseFromGetLatencyResult HttpResponseFromGetLatencyResult;
	HttpResponseFromGetLatencyResult.fromjson(Http::GetResult(_Request));

	return K_ResponseFromGetLatencyResult {
		PersonalBest = HttpResponseFromGetLatencyResult.personalBest,
		Average = HttpResponseFromGetLatencyResult.average
	};
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Start a request to save the latency test's latency
 *
 *	@param	_Latency		The latency (in milliseconds)
 *
 *	@return					The request
 */
Http::K_Request PostSaveLatencyResult(Integer _Latency) {
	declare K_HttpPostSaveLatencyResult HttpPostSaveLatencyResult = K_HttpPostSaveLatencyResult { latency = _Latency };
	return Http::CreatePost(Config::Get().APIBaseUrl^C_API_Player^C_Route_PostSaveLatencyResult, HttpPostSaveLatencyResult.tojson(), C_Headers);
}