/**
 *	Store for Splashscreens
 */
#Const Version		"1.2.0"
#Const ScriptName	"Libs/Nadeo/CMGame/Stores/SplashscreenStore_ML.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/CMGame/Utils/Store_ML.Script.txt" as Store
#Include "Libs/Nadeo/CMGame/Structures/SplashscreenStruct.Script.txt" as SplashscreenStruct

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Structures
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Struct K_State {
	Boolean IsImagePreloadEnabled;
	Text TargetSubscription;
	Integer RequestTimestamp_GetSplashscreen;
	SplashscreenStruct::K_Splashscreen Splashscreen;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_State_Null K_State {
	IsImagePreloadEnabled = True,
	TargetSubscription = "",
	RequestTimestamp_GetSplashscreen = -1,
	Splashscreen = SplashscreenStruct::K_Splashscreen {}
}

#Const C_ComponentName "cmgame-lib-store-splashscreen"
#Const P "CMGame_SplashscreenStore::"
#Const Q "CMGame_SplashscreenStore"
#Const C_StoreId "cmgame-splashscreen"

#Const C_Action_RetrieveSplashscreen "CMGame_SplashscreenStore_Action_RetrieveSplashscreen"
#Const C_Action_CreateImpression "CMGame_SplashscreenStore_Action_CreateImpression"

#Const C_Event_SplashscreenUpdated "CMGame_SplashscreenStore_Event_SplashscreenUpdated"
#Const C_Event_ImpressionCreated "CMGame_SplashscreenStore_Event_ImpressionCreated"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the splashscreen info stored
SplashscreenStruct::K_Splashscreen GetSplashscreen() {
	declare K_State CMGame_SplashscreenStore_State for System = C_State_Null;
	return CMGame_SplashscreenStore_State.Splashscreen;
}

/// Enable or disable the image preload
Void SetSplashscreenImagePreloadState(Boolean _IsPreloadEnabled) {
	declare K_State CMGame_SplashscreenStore_State for System = C_State_Null;
	CMGame_SplashscreenStore_State.IsImagePreloadEnabled = _IsPreloadEnabled;
}

/// Enable a periodic retrieval of the splashscreen
Void EnablePeriodicSplashscreenRetrieve(Text _TargetSubscription) {
	declare K_State CMGame_SplashscreenStore_State for System = C_State_Null;
	CMGame_SplashscreenStore_State.RequestTimestamp_GetSplashscreen = Now + SplashscreenStruct::C_SplashscreenDelay;
	CMGame_SplashscreenStore_State.TargetSubscription = _TargetSubscription;
}

/// Disable the periodic retrieval of the splashscreen
Void DisablePeriodicSplashscreenRetrieve() {
	declare K_State CMGame_SplashscreenStore_State for System = C_State_Null;
	CMGame_SplashscreenStore_State.RequestTimestamp_GetSplashscreen = -1;
	CMGame_SplashscreenStore_State.TargetSubscription = "";
}

/// Trigger the request to retrieve the splashscreen
Void Action_RetrieveSplashscreen(CMlScript _This, Text _TargetSubscription) {
	_This.SendCustomEvent(C_Action_RetrieveSplashscreen, [_TargetSubscription]);
}
Void Action_RetrieveSplashscreen(CMlScript _This) {
	_This.SendCustomEvent(C_Action_RetrieveSplashscreen, [""]);
}

/// Trigger the request to create an impression of a viewed splashscreen
Void Action_CreateImpression(CMlScript _This, Text _SplashscreenUid, Integer _ViewTime, Boolean _HasClicked) {
	_This.SendCustomEvent(C_Action_CreateImpression, [_SplashscreenUid, ""^_ViewTime, ""^_HasClicked]);
}

/// Initialize the store
Void MainInit(CMlScript _This) {
	Store::Subscribe(_This, C_StoreId);
}

/// Loop of the store
Void MainLoop(CMlScript _This) {
	foreach (Event in _This.PendingEvents) {
		switch (Event.Type) {
			case CMlScriptEvent::Type::PluginCustomEvent: {
				switch (Event.CustomEventType) {
					case C_Event_SplashscreenUpdated: {
						if (Event.CustomEventData.count > 0 && Event.CustomEventData[0] != "") {
							declare K_State CMGame_SplashscreenStore_State for System = C_State_Null;
							if (CMGame_SplashscreenStore_State.IsImagePreloadEnabled) {
								_This.PreloadImage(Event.CustomEventData[0]);
							}
						}
					}
				}
			}
		}
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the store manialink component
Text ComponentV2() {
	return MV::ComponentV2(
		C_ComponentName,
		"""
		""",
		"""
#Include "Libs/Nadeo/CMGame/Stores/SplashscreenStore_ML.Script.txt" as {{{Q}}}
		""",
		"""
***MainInit***
***
{{{P}}}MainInit(This);
***

***MainLoop***
***
{{{P}}}MainLoop(This);
***
		""",
		[],
		[]
	);
}