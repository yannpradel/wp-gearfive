/**
 *	UI module: PrestigeEarned common
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/TMGame/Modes/Base/UIModules/PrestigeEarned_Common.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Common.Script.txt" as UIModules_Common

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_Race_PrestigeEarned"
#Const C_LayerType CUILayer::EUILayerType::Normal
#Const C_UIModuleConfig UIModules_Common::K_ModuleConfig {
	Id = "Race_PrestigeEarned", //< Do not modify this Id once in production. It is used by the xmlrpc protocole and would break compatibility.
	IsCustomizable = True,
	Properties = UIModules_Common::K_ModuleProperties {
		Position = <0., 0.>,
		Scale = 1.,
		Visible = True
	}
}

#Const C_PrestigeMode_Season 0
#Const C_PrestigeMode_Ranked 1
#Const C_PrestigeMode_Royal 2

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Block or unblock the prestige celebration
Void SetPrestigeCelebrationBlockState(CUIConfig _UI, Text _BlockingUIModuleId, Boolean _IsBlocked) {
	if (_UI != Null) {
		declare Text[] Race_PrestigeEarned_BlockingUIModules for _UI;
		if (_IsBlocked) {
			if (!Race_PrestigeEarned_BlockingUIModules.exists(_BlockingUIModuleId)) {
				Race_PrestigeEarned_BlockingUIModules.add(_BlockingUIModuleId);
			}
		} else {
			Race_PrestigeEarned_BlockingUIModules.remove(_BlockingUIModuleId);
		}
	}
}
Void BlockPrestigeCelebration(CUIConfig _UI, Text _BlockingUIModuleId) {
	SetPrestigeCelebrationBlockState(_UI, _BlockingUIModuleId, True);
}
Void UnblockPrestigeCelebration(CUIConfig _UI, Text _BlockingUIModuleId) {
	SetPrestigeCelebrationBlockState(_UI, _BlockingUIModuleId, False);
}

Boolean IsBlockingPrestigeCelebration(CUIConfig _UI, Text _BlockingUIModuleId) {
	if (_UI == Null) return False;
	declare Text[] Race_PrestigeEarned_BlockingUIModules for _UI;
	return Race_PrestigeEarned_BlockingUIModules.exists(_BlockingUIModuleId);
}

Boolean IsPrestigeCelebrationBlocked(CUIConfig _UI) {
	if (_UI == Null) return False;
	declare Text[] Race_PrestigeEarned_BlockingUIModules for _UI;
	return Race_PrestigeEarned_BlockingUIModules.count > 0;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Define if the prestige celebration is currently active or not
Void SetPrestigeCelebrationActiveState(CUIConfig _UI, Boolean _IsActivated) {
	if (_UI == Null) return;
	declare Boolean Race_PrestigeEarned_CelebrationIsActive for _UI;
	Race_PrestigeEarned_CelebrationIsActive = _IsActivated;
}

Boolean IsPrestigeCelebrationActivated(CUIConfig _UI) {
	if (_UI == Null) return False;
	declare Boolean Race_PrestigeEarned_CelebrationIsActive for _UI;
	return Race_PrestigeEarned_CelebrationIsActive;
}