/**
 *	TMGL API related functions
 */
#Const Version		"2021-09-27"
#Const ScriptName	"Libs/Nadeo/TMNext/TrackMania/Modes/ChampionTMGL/TMGLAPI_Client.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/MenuLibs/Common/Manialink/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/TMNext/TrackMania/Modes/ChampionTMGL/TMGLAPI_Common.Script.txt" as TMGLAPI

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Name "component-championtmgl-api" //< Component name
#Const TMGLAPI::P as P
#Const TMGLAPI::C_MaxHearts as C_MaxHearts

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the component
 *
 *	@return														The component id
 */
Text Component() {
	return MV::Component(
		C_Name,
		"""
		""",
		"""
{{{dumptype(TMGLAPI::LibChampionTMGLAPI_K_LeaderboardPlayer)}}}

#Const {{{TMGLAPI::P}}}C_MaxHearts {{{dump(C_MaxHearts)}}}
		""",
		"""
Integer {{{P}}}GetLeagueRankingUpdate() {
	declare netread Integer Net_ChampionTMGL_TMGLAPI_LeagueRankingUpdate for Teams[0];
	return Net_ChampionTMGL_TMGLAPI_LeagueRankingUpdate;
}

{{{P}}}K_LeaderboardPlayer[] {{{P}}}GetLeagueRanking() {
	declare netread {{{P}}}K_LeaderboardPlayer[] Net_ChampionTMGL_TMGLAPI_LeagueRanking for Teams[0];
	return Net_ChampionTMGL_TMGLAPI_LeagueRanking;
}

Integer {{{P}}}GetCheersTotal() {
	declare netread Integer Net_ChampionTMGL_TMGLAPI_CheersTotal for Teams[0];
	return Net_ChampionTMGL_TMGLAPI_CheersTotal;
}

Integer {{{P}}}GetHeartsUpdate() {
	declare netread Integer Net_ChampionTMGL_TMGLAPI_HeartsUpdate for Teams[0];
	return Net_ChampionTMGL_TMGLAPI_HeartsUpdate;
}

Integer[Text] {{{P}}}GetHearts() {
	declare netread Integer[Text] Net_ChampionTMGL_TMGLAPI_Hearts for Teams[0];
	return Net_ChampionTMGL_TMGLAPI_Hearts;
}
		""",
		[],
		[]
	);
}