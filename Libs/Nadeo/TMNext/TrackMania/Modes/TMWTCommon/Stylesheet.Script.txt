/** 
 *	Manialink stylesheet for TMWT
 */
#Const Version		"2023-03-18"
#Const ScriptName	"Libs/Nadeo/TMNext/TrackMania/Modes/TMWTCommon/Stylesheet.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "ColorLib" as CL
#Include "Libs/Nadeo/MenuLibs/Common/FontManager.Script.txt" as FontManager
#Include "Libs/Nadeo/TMNext/TrackMania/ColorPalette.Script.txt" as ColorPalette

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constant
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Class_Text_ExtraBold "tmwt-common_text-extra-bold"
#Const C_Class_Text_SemiBold "tmwt-common_text-semi-bold"
#Const C_Class_Gradient_BlueTeam "tmwt-common_gradient-blue-team"
#Const C_Class_Gradient_RedTeam "tmwt-common_gradient-red-team"
#Const C_Class_Gradient_Accent "tmwt-common_gradient-accent"
#Const C_Class_Gradient_WarmUp "tmwt-common_gradient-warmup"
#Const C_Class_BackgroundBgColor_Default "tmwt-common_background-bg-color-default"
#Const C_Class_BackgroundColorize_Default "tmwt-common_background-colorize-default"
#Const C_Class_BackgroundBgColor_Accent "tmwt-common_background-bg-color-accent"
#Const C_Class_BackgroundColorize_Accent "tmwt-common_background-colorize-accent"
#Const C_Class_BackgroundBgColor_WarmUp "tmwt-common_background-bg-color-warmup"
#Const C_Class_BackgroundColorize_WarmUp "tmwt-common_background-colorize-warmup"
#Const C_Class_Border_Default "tmwt-common_border-default"
#Const C_Class_Border_Accent "tmwt-common_border-accent"

#Const C_BorderWidth 0.5

#Const C_Theme_TMGL 0
#Const C_Theme_Classic 1

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Get the class color in vector format
Vec3 GetVec3Color(Text _Class, Integer _Theme) {
	switch (_Class) {
		case C_Class_Gradient_BlueTeam: {
			return ColorPalette::C_Color_Vec3_TMWT_BlueTeam;
		}
		case C_Class_Gradient_RedTeam: {
			return ColorPalette::C_Color_Vec3_TMWT_RedTeam;
		}
		case C_Class_Gradient_Accent: {
			switch (_Theme) {
				case C_Theme_TMGL: return ColorPalette::C_Color_Vec3_TMWT_PinkMain;
				case C_Theme_Classic: return ColorPalette::C_Color_Vec3_DarkBlue;
			}
		}
		case C_Class_Gradient_WarmUp: {
			switch (_Theme) {
				case C_Theme_TMGL: return ColorPalette::C_Color_Vec3_TMWT_PinkMain;
				case C_Theme_Classic: return ColorPalette::C_Color_Vec3_WarmUp;
			}
		}
		case C_Class_BackgroundBgColor_Default: {
			switch (_Theme) {
				case C_Theme_TMGL: return ColorPalette::C_Color_Vec3_TMWT_BlueMain;
				case C_Theme_Classic: return ColorPalette::C_Color_Vec3_DarkBlue;
			}
		}
		case C_Class_BackgroundColorize_Default: {
			switch (_Theme) {
				case C_Theme_TMGL: return ColorPalette::C_Color_Vec3_TMWT_BlueMain;
				case C_Theme_Classic: return ColorPalette::C_Color_Vec3_DarkBlue;
			}
		}
		case C_Class_BackgroundBgColor_Accent: {
			switch (_Theme) {
				case C_Theme_TMGL: return ColorPalette::C_Color_Vec3_TMWT_PinkMain;
				case C_Theme_Classic: return ColorPalette::C_Color_Vec3_DarkBlue;
			}
		}
		case C_Class_BackgroundColorize_Accent: {
			switch (_Theme) {
				case C_Theme_TMGL: return ColorPalette::C_Color_Vec3_TMWT_PinkMain;
				case C_Theme_Classic: return ColorPalette::C_Color_Vec3_DarkBlue;
			}
		}
		case C_Class_BackgroundBgColor_WarmUp: {
			switch (_Theme) {
				case C_Theme_TMGL: return ColorPalette::C_Color_Vec3_TMWT_PinkMain;
				case C_Theme_Classic: return ColorPalette::C_Color_Vec3_WarmUp;
			}
		}
		case C_Class_BackgroundColorize_WarmUp: {
			switch (_Theme) {
				case C_Theme_TMGL: return ColorPalette::C_Color_Vec3_TMWT_PinkMain;
				case C_Theme_Classic: return ColorPalette::C_Color_Vec3_WarmUp;
			}
		}
		case C_Class_Border_Default: {
			return ColorPalette::C_Color_Vec3_White;
		}
		case C_Class_Border_Accent: {
			switch (_Theme) {
				case C_Theme_TMGL: return ColorPalette::C_Color_Vec3_TMWT_PinkMain;
				case C_Theme_Classic: return ColorPalette::C_Color_Vec3_White;
			}
		}
	}
	return ColorPalette::C_Color_Vec3_White;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Get the class color in hexadecimal format
Text GetHexColor(Text _Class, Integer _Theme) {
	return CL::RgbToHex6(GetVec3Color(_Class, _Theme));
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Get the stylesheet to inject in the manialink
Text Get(Integer _Theme) {
	return """
<stylesheet>
	<style class="{{{C_Class_Text_ExtraBold}}}" textprefix="$t" textfont="{{{FontManager::C_GameFontExtraBold}}}" textcolor="{{{ColorPalette::C_Color_White}}}" />
	<style class="{{{C_Class_Text_SemiBold}}}" textprefix="$t" textfont="{{{FontManager::C_GameFontSemiBold}}}" textcolor="{{{ColorPalette::C_Color_White}}}" />
	<style class="{{{C_Class_Gradient_BlueTeam}}}" colorize="{{{GetHexColor(C_Class_Gradient_BlueTeam, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_Gradient_RedTeam}}}" colorize="{{{GetHexColor(C_Class_Gradient_RedTeam, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_Gradient_Accent}}}" colorize="{{{GetHexColor(C_Class_Gradient_Accent, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_Gradient_WarmUp}}}" colorize="{{{GetHexColor(C_Class_Gradient_WarmUp, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_BackgroundBgColor_Default}}}" bgcolor="{{{GetHexColor(C_Class_BackgroundBgColor_Default, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_BackgroundColorize_Default}}}" colorize="{{{GetHexColor(C_Class_BackgroundColorize_Default, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_BackgroundBgColor_Accent}}}" bgcolor="{{{GetHexColor(C_Class_BackgroundBgColor_Accent, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_BackgroundColorize_Accent}}}" colorize="{{{GetHexColor(C_Class_BackgroundColorize_Accent, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_BackgroundBgColor_WarmUp}}}" bgcolor="{{{GetHexColor(C_Class_BackgroundBgColor_WarmUp, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_BackgroundColorize_WarmUp}}}" colorize="{{{GetHexColor(C_Class_BackgroundColorize_WarmUp, _Theme)}}}" opacity="0.8" />
	<style class="{{{C_Class_Border_Default}}}" bgcolor="{{{GetHexColor(C_Class_Border_Default, _Theme)}}}" />
	<style class="{{{C_Class_Border_Accent}}}" bgcolor="{{{GetHexColor(C_Class_Border_Accent, _Theme)}}}" />
</stylesheet>
	""";
}
Text Get() {
	return Get(C_Theme_TMGL);
}