/** 
 *	Communication with the Cup of the Day API
 */
#Const Version		"2020-03-25"
#Const ScriptName	"Libs/Nadeo/TMNext/TrackMania/Modes/TimeAttackDaily/DailyStructs.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Structs
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Struct K_Result {
	Text MapUid;
	Text AccountId;
	Integer BestTime;
	Integer Rank;
	Text ZonePath;
	Boolean IsRegistered;
	Boolean RegistrationPosted;
	Boolean WaitingForNewRank;
}

#Struct K_PostResult {
	Text player;
	Integer score;
	Text zone;
}

#Struct K_PostResults {
	K_PostResult[] records;
}

#Struct K_ZoneRanksFromApi {
	Text zone;
	Integer rank;
}

#Struct K_PostResultResponse {
	Integer time;
	Text uid;
	Text player;
	Integer score;
	K_ZoneRanksFromApi[] zoneRanks;
}

#Struct K_MapRecordsFromAPI_Entry {
	Text player;
	Integer score;
	Integer rank;
}

#Struct K_MapRecordsFromAPI {
	Text uid;
	Integer cardinal;
	K_MapRecordsFromAPI_Entry[] records;
}

#Struct K_MatchStatus {
	Text ChallengeId;
	Text CompetitionId; // looks like "361"
	Text CompetitionLiveId; // looks like "LID-COMP-5pydj10t2wigvxv"
	Text StartDate;
	Integer EndTime; // Match end in GameTime format
	Text MatchesGeneration_Date;
	Boolean Results_Requested;
	Boolean LastResultsSent;
	Boolean LastRegistrationsSent;
	Boolean LastRegistrationsReceived;
	K_Result[Text] DailyResults;
	Boolean FinalRanksReceived;
	Boolean NeedResultsUpdate;
}

#Struct K_PostRegisteredPlayers_Entry {
	Text participant;
	Text zone;
}

#Struct K_PostRegisteredPlayers {
	K_PostRegisteredPlayers_Entry[] participants;
}

#Struct K_GetRegisteredPlayers_Entry {
	Text participant;
	Text zone;
}

#Struct K_GetRegisteredPlayers {
	K_GetRegisteredPlayers_Entry[] participants;
}

#Struct K_Competition {
	Integer id;
	Text liveId;
	Text name;
	Text startDate;
	Text matchesGenerationDate;
}
#Struct K_Challenge {
	Integer id;
	Text name;
	Text startDate;
}

#Struct K_DailyCup {
	Integer id;
	K_Competition competition;
	K_Challenge challenge;
	Text startDate;
}

#Struct K_LeaderboardFromApiEntry {
	Integer time;
	Text uid;
	Text player;
	Integer score;
	Integer rank;
}