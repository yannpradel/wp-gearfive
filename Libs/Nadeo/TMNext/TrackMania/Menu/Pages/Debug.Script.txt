/** 
 *	Page: Debug
 */
#Const Version		"2020-02-17"
#Const ScriptName	"Libs/Nadeo/TMNext/TrackMania/Menu/Pages/Debug.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/MenuLibs/Common/Manialink/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/MenuLibs/Common/Menu/Components/Transition.Script.txt" as Transition
#Include "Libs/Nadeo/MenuLibs/Common/Menu/Components/Navigation.Script.txt" as Navigation
#Include "Libs/Nadeo/MenuLibs/Common/FontManager.Script.txt" as FontManager
#Include "Libs/Nadeo/MenuLibs/Common/Menu/Router_ML.Script.txt" as Router
#Include "Libs/Nadeo/TMNext/TrackMania/Menu/RoutePaths.Script.txt" as RoutePaths

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Name "Page_Debug"
#Const C_NavGroupName "navgroup-page-debug"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the page manialink
 *
 *	@return														The page manialink
 */
Text GetManialink() {
	return MV::Create(
C_Name, 3,
"""
<stylesheet>
	<style class="text-base" halign="center" valign="center2" textfont="{{{FontManager::C_GameFontRegular}}}"/>
</stylesheet>
<frame id="frame-global">
	<quad z-index="-1" size="320 180" fullscreen="1" halign="center" valign="center" bgcolor="ac2345" />

	<frame id="frame-zone"
		data-nav-inputs="select;cancel;up;down" 
		data-nav-targets="_;_;frame-register;frame-register" 
		data-nav-zone="quad-bg"
		data-nav-group="{{{C_NavGroupName}}}"
		class="{{{Navigation::C_Class}}}"
	>
		<quad id="quad-bg" size="50 20" class="{{{Navigation::C_Class_ActivationZone}}}" bgcolor="28A745" halign="center" valign="center" scriptevents="1" z-index="-1" />
		<label size="50 20" text="Change your zone" textprefix="$t" class="text-base" />
	</frame>
</frame>
""",
"""
""",
"""
Void Focus(CMlControl _From, CMlControl _To) {
	if ({{{Transition::P}}}IsInTransition(This)) return;
	
	if (_From != Null) {
		{{{Navigation::P}}}Unfocus(This, _From);
		_From.RelativeScale = 1.;
	}
	
	if (_To != Null) {
		{{{Navigation::P}}}Focus(This, _To);
		_To.RelativeScale = 1.2;
	}
}

Void Select(CMlControl _Control) {
	if (_Control == Null || {{{Transition::P}}}IsInTransition(This)) return;

	switch (_Control.ControlId) {
		case "frame-zone": {{{Router::P}}}Push(This, "{{{RoutePaths::C_Path_WelcomeChangeZone}}}", ["{{{RoutePaths::C_Query_EditMode}}}" => "1"]);
	}
}

***MainLoop***
***
if ({{{Router::P}}}PageIsRunning(This, "{{{RoutePaths::C_Path_Debug}}}")) {
	foreach (Event in {{{Navigation::P}}}GetPendingEvents(This)) {
		switch (Event.Type) {
			case {{{Navigation::P}}}C_EventType_NavigateInput: {
				if ({{{Navigation::P}}}IsEventFromGroup(This, Event, "{{{C_NavGroupName}}}")) {
					if (Event.Input == CMlScriptEvent::EMenuNavAction::Select) {
						Select(Event.To);
					} else {
						Focus(Event.From, Event.To);
					}
				}
			}
			case {{{Navigation::P}}}C_EventType_NavigateMouse: {
				if ({{{Navigation::P}}}IsEventFromGroup(This, Event, "{{{C_NavGroupName}}}")) {
					if (Event.Mouse == CMlScriptEvent::Type::MouseClick) {
						Select(Event.To);
					} else {
						Focus(Event.From, Event.To);
					}
				}
			}
		}
	}
}
***
""",
[Transition::ComponentV2(), Navigation::ComponentV2(), Router::ComponentV2()],
[]
	);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Update from the ManiaApp
Void Yield() {
	
}