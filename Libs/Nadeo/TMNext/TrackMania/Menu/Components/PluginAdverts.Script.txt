/** 
 *	Component: PluginAdverts
 */
#Const Version		"2022-09-20"
#Const ScriptName	"Libs/Nadeo/TMNext/TrackMania/Menu/Components/PluginAdverts.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CommonLibs/Common/Http.Script.txt" as Http
#Include "Libs/Nadeo/CommonLibs/Common/HttpAuthorizationHeader.Script.txt" as HttpAuthorizationHeader
#Include "Libs/Nadeo/TMNext/TrackMania/Config.Script.txt" as Config
#Include "Libs/Nadeo/TMNext/TrackMania/Menu/Constants.Script.txt" as Const

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Name "component-pluginadverts" //< Component name

#Const C_API_Advertising "/api/token/advertising"

#Const C_Route_GetCampaignClick "/campaign/click"

#Const C_QueryParameter_CampaignUid "campaignUid"
#Const C_QueryParameter_Auth "auth"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Structures
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Struct K_PluginAdverts_AdLink { //< Do not update this structure without updating the associated structure in the Plugin.
	Integer AdUid;
	Text CampaignUid;
	Text MediaUrl_2x3;
	Text MediaUrl_16x9;
	Text MediaUrl_64x10;
	Text ExternalUrl;
	Text Name;
}

#Struct K_PluginAdverts_AdHistory {
	K_PluginAdverts_AdLink[] AdLinks;
	Integer UpdateCount;
}

#Struct K_Maniapub {
	Integer AdUid;
	Text CampaignUid;
	Text[Text] MediaUrl;
	Text ExternalUrl;
	Text Name;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the number of ads to display
K_Maniapub[] GetManiapubs() {
	declare K_PluginAdverts_AdHistory PluginAdverts_AdHistory for System;
	declare K_Maniapub[] Maniapubs;

	foreach (AdLink in PluginAdverts_AdHistory.AdLinks) {
		Maniapubs.add(K_Maniapub {
			AdUid = AdLink.AdUid,
			CampaignUid = AdLink.CampaignUid,
			MediaUrl = [
				Const::C_InfoPanels_2x3 => AdLink.MediaUrl_2x3,
				Const::C_InfoPanels_16x9 => AdLink.MediaUrl_16x9,
				Const::C_InfoPanels_64x10 => AdLink.MediaUrl_64x10
			],
			ExternalUrl = AdLink.ExternalUrl,
			Name = AdLink.Name
		});
	}

	return Maniapubs;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the link of the advertising campaign to open in it the web browser
Text GetManiapubLink(K_Maniapub _Maniapub) {
	declare Text QueryString = Http::CreateQueryString([
		C_QueryParameter_CampaignUid => _Maniapub.CampaignUid,
		C_QueryParameter_Auth => HttpAuthorizationHeader::Get()
	]);

	return Config::Get().APIBaseUrl^C_API_Advertising^C_Route_GetCampaignClick^QueryString;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the number of ads to display
Integer GetManiapubsNumber() {
	return GetManiapubs().count;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Check if there are ads available to display
Boolean IsManiapubsAvailable() {
	return GetManiapubsNumber() > 0;
}