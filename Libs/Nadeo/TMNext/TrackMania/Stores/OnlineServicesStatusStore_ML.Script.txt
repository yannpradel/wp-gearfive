/** 
 *	Store value for Online Services Status (online services)
 */
#Const Version		"2022-11-09"
#Const ScriptName	"Libs/Nadeo/TMNext/TrackMania/Stores/OnlineServicesStatusStore_ML.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "TextLib" as TL
#Include "Libs/Nadeo/MenuLibs/Common/Manialink/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/CommonLibs/Common/Store_ML.Script.txt" as Store
#Include "Libs/Nadeo/TMNext/TrackMania/API/OnlineServicesStatusAPI.Script.txt" as OnlineServicesStatusAPI

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Structures
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Struct K_State {
	OnlineServicesStatusAPI::OnlineServicesStatusAPI_K_OnlineServiceOverview Status;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_State_Null K_State {
	Status = OnlineServicesStatusAPI::OnlineServicesStatusAPI_K_OnlineServiceOverview {}
}

#Const C_ComponentName "lib-online-services-status-store"
#Const P "TMNext_OnlineServicesStatusStore::"
#Const Q "TMNext_OnlineServicesStatusStore"
#Const C_StoreId "online-services-status"

#Const C_Action_GetStatus "TMNext_OnlineServicesStatusStore_Action_GetStatus"

#Const C_Event_OnlineServicesStatusUpdated "TMNext_OnlineServicesStatusStore_Event_CurrentStatusUdpated"

// /!\ Same values than in API
#Const C_OnlineServicesStatus_None "none"
#Const C_OnlineServicesStatus_Maintenance "maintenance"
#Const C_OnlineServicesStatus_Outage "outage"
#Const C_OnlineServicesStatus_Degraded "degraded"

#Const C_OnlineServicesStatus_FailedRequest "failed-request" // custom value for script

#Const C_OnlineServicesStatus_Names [
	//L16N [Online Services Status Store] The online services status displayed when all services work well
	"none" => _("|Online Services Status|Operational"),
	//L16N [Online Services Status Store] The online services status displayed during a maintenance
	"maintenance" => _("|Online Services Status|Maintenance"),
	//L16N [Online Services Status Store] The online services status displayed when some services suffer from a known incident
	"outage" => _("|Online Services Status|Outage"),
	//L16N [Online Services Status Store] The online services status displayed when some services are unreachable without known reason
	"degraded" => _("|Online Services Status|Degraded")
]

#Const C_OnlineServicesStatus_Colors [
	"none" => "6FA",
	"maintenance" => "FA0",
	"outage" => "F00",
	"degraded" => "F00"
]

#Const C_OnlineServicesStatus_Icons [
	"none" => "$<$6FA$>",
	"maintenance" => "$<$FA0$>",
	"outage" => "$<$F00$>",
	"degraded" => "$<$F00$>"
]

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
Void Action_GetStatus(CMlScript _This) {
	_This.SendCustomEvent(C_Action_GetStatus, []);
}

OnlineServicesStatusAPI::OnlineServicesStatusAPI_K_OnlineServiceOverview GetCurrentStatus() {
	declare K_State TMNext_OnlineServicesStatusStore_State for System = C_State_Null;
	return TMNext_OnlineServicesStatusStore_State.Status;
}

Text GetCurrentStatusType() {
	declare K_State TMNext_OnlineServicesStatusStore_State for System = C_State_Null;
	return TMNext_OnlineServicesStatusStore_State.Status.Event.Type;
}

Text GetCurrentStatusColor() {
	declare K_State TMNext_OnlineServicesStatusStore_State for System = C_State_Null;
	return C_OnlineServicesStatus_Colors.get(TMNext_OnlineServicesStatusStore_State.Status.Event.Type, "");
}

Text GetCurrentStatusNameAndIcon() {
	declare K_State TMNext_OnlineServicesStatusStore_State for System = C_State_Null;
	return TL::Compose("%1 %2", C_OnlineServicesStatus_Names.get(TMNext_OnlineServicesStatusStore_State.Status.Event.Type, ""), C_OnlineServicesStatus_Icons.get(TMNext_OnlineServicesStatusStore_State.Status.Event.Type, ""));
}

Text GetCurrentStatusNameAndIconColorized() {
	declare K_State TMNext_OnlineServicesStatusStore_State for System = C_State_Null;
	return TL::Compose("$<$" ^ GetCurrentStatusColor() ^ "%1 %2$>", C_OnlineServicesStatus_Names.get(TMNext_OnlineServicesStatusStore_State.Status.Event.Type, ""), C_OnlineServicesStatus_Icons.get(TMNext_OnlineServicesStatusStore_State.Status.Event.Type, ""));
}

Void MainInit(CMlScript _This) {
	Store::Subscribe(_This, C_StoreId);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
Text ComponentV2() {
	return MV::ComponentV2(
		C_ComponentName,
		"""
		""",
		"""
#Include "Libs/Nadeo/TMNext/TrackMania/Stores/OnlineServicesStatusStore_ML.Script.txt" as {{{Q}}}
		""",
		"""

***MainInit***
***
{{{P}}}MainInit(This);
***
		""",
[
	OnlineServicesStatusAPI::Component()
],
[]
	);
}