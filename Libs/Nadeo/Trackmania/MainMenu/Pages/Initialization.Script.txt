/**
 *	Page: Initialization
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/MainMenu/Pages/Initialization.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/CMGame/Utils/MLHelpers.Script.txt" as MLHelpers
#Include "Libs/Nadeo/CMGame/Utils/Stylesheet.Script.txt" as Stylesheet
#Include "Libs/Nadeo/CMGame/Components/MenuSounds.Script.txt" as MenuSounds
#Include "Libs/Nadeo/CMGame/Menus/ShareMenuNavigation_ML.Script.txt" as ShareMenuNavigation
#Include "Libs/Nadeo/CMGame/Menus/Router_ML.Script.txt" as Router
#Include "Libs/Nadeo/Trackmania/MainMenu/RoutePaths.Script.txt" as RoutePaths
#Include "Libs/Nadeo/Trackmania/MainMenu/Constants.Script.txt" as Const

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Name "Page_Initialization"
#Const C_NavGroupName "navgroup-page-initialization"

//L16N Do NOT translate this. An official translation will be added manually
#Const C_Epilepsy_Title _("|Legalese|Epilepsy warning heading")
//L16N Do NOT translate this. An official translation will be added manually
#Const C_Epilepsy_Content _("|Legalese|Epilepsy warning corpus")

#Const C_EpilepsyWarningDisplayDuration 10000
#Const C_NadeoLogoDisplayDuration 1250
#Const C_IntroFolder "file://Media/Manialinks/Nadeo/Trackmania/Menus/Intro"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the page manialink
 *
 *	@return														The page manialink
 */
Text GetManialink() {
	declare Vec2 Size_NadeoLogo = MLHelpers::KeepRatioFromX(4096., 1024., 150.);
	declare Vec2 Size_VivoxLogo = MLHelpers::KeepRatioFromY(1170., 480., 20.);

	return MV::Create(
C_Name, 3,
"""
<stylesheet>
	<style class="text-base" halign="center" valign="center2" textfont="{{{Stylesheet::GetFont(Stylesheet::C_Font_Weight_Regular)}}}" textcolor="{{{Stylesheet::GetColorHex6(Stylesheet::C_Color_TextLight)}}}"/>
</stylesheet>
<frame id="frame-global">
	<quad id="button-skip-click" z-index="2" size="320 180" fullscreen="1" halign="center" valign="center" opacity="0" scriptevents="1" />
	<quad z-index="0" size="320 180" fullscreen="1" halign="center" valign="center" bgcolor="{{{Stylesheet::GetColorHex6(Stylesheet::C_Color_BGBlack)}}}" />
	<frame z-index="1" id="frame-epilepsy-warning">
		<label id="label-epilepsy-title" class="text-base" pos="0 70" size="280 20" textsize="6" autonewline="1" maxline="2" textfont="{{{Stylesheet::GetFont(Stylesheet::C_Font_Weight_SemiBold)}}}" text="{{{C_Epilepsy_Title}}}" opacity="0" hidden="1" />
		<label id="label-epilepsy-content" class="text-base" pos="0 60" size="280 140" valign="top" textsize="3" autonewline="1" maxline="28" text="{{{C_Epilepsy_Content}}}" opacity="0" hidden="1" />
	</frame>
	<quad z-index="2" id="quad-logo-ubisoft" size="320 180" autoscale="0" halign="center" valign="center" opacity="0" hidden="1" />
	<quad z-index="2" id="quad-logo-nadeo" {{{MLHelpers::Size(Size_NadeoLogo)}}} autoscale="0" halign="center" valign="center" image="{{{Const::C_LogoFolder}}}/NadeoLogo.dds" opacity="0" hidden="1" />
	<quad z-index="2" id="quad-logo-vivox" {{{MLHelpers::Size(Size_VivoxLogo)}}} pos="0 -70" autoscale="0" halign="center" valign="center" image="{{{Const::C_LogoFolder}}}/VivoxLogo.dds" opacity="0" hidden="1" />
	<quad z-index="3" id="quad-intro" size="320 180" halign="center" valign="center" opacity="0" keepratio="fit" hidden="1" />
</frame>
""",
"""
#Include "TextLib" as TL
#Include "MathLib" as ML
#Include "Libs/Nadeo/CMGame/Utils/Config.Script.txt" as Config

#Struct K_Controls {
	CMlFrame Frame_EpilepsyWarning;
	CMlLabel Label_EpilepsyTitle;
	CMlLabel Label_EpilepsyContent;
	CMlQuad Quad_LogoUbisoft;
	CMlQuad Quad_LogoNadeo;
	CMlQuad Quad_LogoVivox;
	CMlQuad Quad_Intro;
}

#Struct K_State {
	K_Controls Controls;
	Integer Page;
	Integer AutoSkipTime;
	Ident LogoUbisoftId;
	Ident IntroVideoId;
	Ident IntroAudioId;
	Boolean HasDirectLink;
}

#Const C_Page_Null 0
#Const C_Page_EpilepsyWarning 1
#Const C_Page_UbisoftLogo 2
#Const C_Page_NadeoLogo 3
#Const C_Page_Intro 4
#Const C_Page_LeaveInitialization 5

#Const C_EpilepsyWarningDisplayDuration {{{dump(C_EpilepsyWarningDisplayDuration)}}}
#Const C_NadeoLogoDisplayDuration {{{dump(C_NadeoLogoDisplayDuration)}}}
#Const C_FadeOutAnimDuration 250
#Const C_FadeInAnimDuration 250
#Const C_DelayBeforeLeaveInitialization 500

#Const C_LogoFolder {{{dump(Const::C_LogoFolder)}}}
#Const C_IntroFolder {{{dump(C_IntroFolder)}}}
""",
"""
K_State LoadVideo(K_State _State) {
	declare K_State State = _State;

	if (State.LogoUbisoftId == NullId || !Video.Videos.existskey(State.LogoUbisoftId)) {
		declare CVideo LogoUbisoft = Video.CreateVideo(C_LogoFolder^"/UbiLogo.webm", False, True);
		if (LogoUbisoft != Null) {
			State.LogoUbisoftId = LogoUbisoft.Id;
			State.Controls.Quad_LogoUbisoft.Image = LogoUbisoft.Image;
			LogoUbisoft.Stop();
			LogoUbisoft.PlayCursor = 0.;
		}
	}

	if (State.IntroVideoId == NullId || !Video.Videos.existskey(State.IntroVideoId)) {
		declare CVideo IntroVideo = Video.CreateVideo(C_IntroFolder^"/Intro.webm", False, True);
		if (IntroVideo != Null) {
			State.IntroVideoId = IntroVideo.Id;
			State.Controls.Quad_Intro.Image = IntroVideo.Image;
			IntroVideo.Stop();
			IntroVideo.PlayCursor = 0.;
		}
	}

	if (State.IntroAudioId == NullId || !Audio.Sounds.existskey(State.IntroAudioId)) {
		declare CAudioSource IntroAudio = Audio.CreateSound(C_IntroFolder^"/Intro.ogg", 0., False, False, False);
		if (IntroAudio != Null) {
			State.IntroAudioId = IntroAudio.Id;
			IntroAudio.Stop();
			IntroAudio.PlayCursor = 0.;
		}
	}

	return State;
}

K_State UnloadVideo(K_State _State) {
	declare K_State State = _State;

	if (State.LogoUbisoftId != NullId && Video.Videos.existskey(State.LogoUbisoftId)) {
		Video.DestroyVideo(Video.Videos[State.LogoUbisoftId]);
	}
	State.Controls.Quad_LogoUbisoft.Image = Null;
	State.LogoUbisoftId = NullId;

	if (State.IntroVideoId != NullId && Video.Videos.existskey(State.IntroVideoId)) {
		Video.DestroyVideo(Video.Videos[State.IntroVideoId]);
	}
	State.Controls.Quad_Intro.Image = Null;
	State.IntroVideoId = NullId;

	if (State.IntroAudioId != NullId && Audio.Sounds.existskey(State.IntroAudioId)) {
		Audio.DestroySound(Audio.Sounds[State.IntroAudioId]);
	}
	State.IntroAudioId = NullId;

	return State;
}

K_State SetPage(K_State _State, Integer _Page, Boolean _PlayAnim) {
	declare K_State State = _State;

	// Leaving page
	switch (State.Page) {
		case C_Page_EpilepsyWarning: {
			if (_PlayAnim) {
				AnimMgr.Flush(State.Controls.Label_EpilepsyTitle);
				AnimMgr.Flush(State.Controls.Label_EpilepsyContent);
				AnimMgr.Add(State.Controls.Label_EpilepsyTitle, "<anim opacity=\"0\" hidden=\"1\"/>", C_FadeOutAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(State.Controls.Label_EpilepsyContent, "<anim opacity=\"0\" hidden=\"1\" />", C_FadeOutAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
			} else {
				State.Controls.Label_EpilepsyTitle.Opacity = 0.;
				State.Controls.Label_EpilepsyContent.Opacity = 0.;
				State.Controls.Label_EpilepsyTitle.Visible = False;
				State.Controls.Label_EpilepsyContent.Visible = False;
			}
		}
		case C_Page_UbisoftLogo: {
			if (State.LogoUbisoftId != NullId && Video.Videos.existskey(State.LogoUbisoftId)) {
				Video.Videos[State.LogoUbisoftId].Pause();
			}
			if (_PlayAnim) {
				AnimMgr.Flush(State.Controls.Quad_LogoUbisoft);
				AnimMgr.Add(State.Controls.Quad_LogoUbisoft, "<anim opacity=\"0\" hidden=\"1\"/>", C_FadeOutAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
			} else {
				State.Controls.Quad_LogoUbisoft.Opacity = 0.;
				State.Controls.Quad_LogoUbisoft.Visible = False;
			}
		}
		case C_Page_NadeoLogo: {
			if (_PlayAnim) {
				AnimMgr.Flush(State.Controls.Quad_LogoNadeo);
				AnimMgr.Flush(State.Controls.Quad_LogoVivox);
				AnimMgr.Add(State.Controls.Quad_LogoNadeo, "<anim opacity=\"0\" scale=\"0.9\" hidden=\"1\"/>", C_FadeOutAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(State.Controls.Quad_LogoVivox, "<anim opacity=\"0\" hidden=\"1\"/>", C_FadeOutAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
			} else {
				State.Controls.Quad_LogoNadeo.Opacity = 0.;
				State.Controls.Quad_LogoVivox.Opacity = 0.;
				State.Controls.Quad_LogoNadeo.Visible = False;
				State.Controls.Quad_LogoVivox.Visible = False;
			}
		}
		case C_Page_Intro: {
			if (State.IntroVideoId != NullId && Video.Videos.existskey(State.IntroVideoId)) {
				Video.Videos[State.IntroVideoId].Pause();
			}
			if (State.IntroAudioId != NullId && Audio.Sounds.existskey(State.IntroAudioId)) {
				Audio.Sounds[State.IntroAudioId].Stop();
			}
			if (_PlayAnim) {
				AnimMgr.Flush(State.Controls.Quad_Intro);
				AnimMgr.Add(State.Controls.Quad_Intro, "<anim opacity=\"0\" hidden=\"1\"/>", C_FadeOutAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
			} else {
				State.Controls.Quad_Intro.Opacity = 0.;
				State.Controls.Quad_Intro.Visible = False;
			}
		}
		case C_Page_LeaveInitialization: {
			{{{Router::P}}}Push(This, "{{{RoutePaths::C_Path_PressStart}}}");
		}
	}

	// Entering page
	State.Page = _Page;
	State.AutoSkipTime = 0;
	switch (State.Page) {
		case C_Page_EpilepsyWarning: {
			if (_PlayAnim) {
				AnimMgr.Flush(State.Controls.Label_EpilepsyTitle);
				AnimMgr.Flush(State.Controls.Label_EpilepsyContent);
				AnimMgr.Add(State.Controls.Label_EpilepsyTitle, "<anim opacity=\"1\" hidden=\"0\"/>", C_FadeInAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(State.Controls.Label_EpilepsyContent, "<anim opacity=\"1\" hidden=\"0\" />", C_FadeInAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
			} else {
				State.Controls.Label_EpilepsyTitle.Opacity = 1.;
				State.Controls.Label_EpilepsyContent.Opacity = 1.;
				State.Controls.Label_EpilepsyTitle.Visible = True;
				State.Controls.Label_EpilepsyContent.Visible = True;
			}
			State.AutoSkipTime = Now + C_EpilepsyWarningDisplayDuration;
		}
		case C_Page_UbisoftLogo: {
			if (State.LogoUbisoftId != NullId && Video.Videos.existskey(State.LogoUbisoftId)) {
				declare CVideo LogoUbisoft <=> Video.Videos[State.LogoUbisoftId];
				LogoUbisoft.PlayCursor = 0.;
				LogoUbisoft.Play();
				State.AutoSkipTime = Now + ML::NearestInteger(LogoUbisoft.PlayLength * 1000);
			} else {
				State.AutoSkipTime = Now;
			}
			if (_PlayAnim) {
				AnimMgr.Flush(State.Controls.Quad_LogoUbisoft);
				AnimMgr.Add(State.Controls.Quad_LogoUbisoft, "<anim opacity=\"1\" hidden=\"0\"/>", C_FadeInAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
			} else {
				State.Controls.Quad_LogoUbisoft.Opacity = 1.;
				State.Controls.Quad_LogoUbisoft.Visible = True;
			}
		}
		case C_Page_NadeoLogo: {
			if (_PlayAnim) {
				AnimMgr.Flush(State.Controls.Quad_LogoNadeo);
				AnimMgr.Flush(State.Controls.Quad_LogoVivox);
				State.Controls.Quad_LogoNadeo.RelativeScale = 1.1;
				AnimMgr.Add(State.Controls.Quad_LogoNadeo, "<anim opacity=\"1\" scale=\"1\" hidden=\"0\"/>", C_FadeInAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
				AnimMgr.Add(State.Controls.Quad_LogoVivox, "<anim opacity=\"1\" hidden=\"0\"/>", C_FadeInAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
			} else {
				State.Controls.Quad_LogoNadeo.Opacity = 1.;
				State.Controls.Quad_LogoVivox.Opacity = 1.;
				State.Controls.Quad_LogoNadeo.RelativeScale = 1.;
				State.Controls.Quad_LogoNadeo.Visible = True;
				State.Controls.Quad_LogoVivox.Visible = True;
			}
			State.AutoSkipTime = Now + C_NadeoLogoDisplayDuration;
		}
		case C_Page_Intro: {
			if (State.IntroVideoId != NullId && Video.Videos.existskey(State.IntroVideoId)) {
				declare CVideo IntroVideo <=> Video.Videos[State.IntroVideoId];
				IntroVideo.PlayCursor = 0.;
				IntroVideo.Play();
				State.AutoSkipTime = Now + ML::NearestInteger(IntroVideo.PlayLength * 1000);
				if (State.IntroAudioId != NullId && Audio.Sounds.existskey(State.IntroAudioId)) {
					declare CAudioSource IntroAudio <=> Audio.Sounds[State.IntroAudioId];
					IntroAudio.PlayCursor = 0.;
					IntroAudio.Play();
				}
			} else {
				State.AutoSkipTime = Now;
			}
			if (_PlayAnim) {
				AnimMgr.Flush(State.Controls.Quad_Intro);
				AnimMgr.Add(State.Controls.Quad_Intro, "<anim opacity=\"1\" hidden=\"0\"/>", C_FadeInAnimDuration, CAnimManager::EAnimManagerEasing::QuadOut);
			} else {
				State.Controls.Quad_Intro.Opacity = 1.;
				State.Controls.Quad_Intro.Visible = True;
			}
		}
		case C_Page_LeaveInitialization: {
			// Wait for the fade out animation of the previous page to complete
			State.AutoSkipTime = Now + C_FadeOutAnimDuration + C_DelayBeforeLeaveInitialization;
		}
	}

	return State;
}
K_State SetPage(K_State _State, Integer _Page) {
	return SetPage(_State, _Page, True);
}

K_State Skip(K_State _State) {
	declare K_State State = _State;

	State.AutoSkipTime = 0;

	switch (State.Page) {
		case C_Page_EpilepsyWarning: State = SetPage(State, C_Page_UbisoftLogo);
		case C_Page_UbisoftLogo: State = SetPage(State, C_Page_NadeoLogo);
		case C_Page_NadeoLogo: State = SetPage(State, C_Page_Intro);
		case C_Page_Intro: State = SetPage(State, C_Page_LeaveInitialization);
		case C_Page_LeaveInitialization: State = SetPage(State, C_Page_Null);
	}

	return State;
}

Void AlignEpilepsyWarning(K_State _State) {
	declare Real SizeY_Title = ML::Min(
		_State.Controls.Label_EpilepsyTitle.Size.Y,
		_State.Controls.Label_EpilepsyTitle.ComputeHeight(TL::GetTranslatedText(_State.Controls.Label_EpilepsyTitle.Value))
	) + 10.;
	declare Real SizeY_Content = ML::Min(
		_State.Controls.Label_EpilepsyContent.Size.Y,
		_State.Controls.Label_EpilepsyContent.ComputeHeight(TL::GetTranslatedText(_State.Controls.Label_EpilepsyContent.Value))
	);

	_State.Controls.Label_EpilepsyTitle.RelativePosition_V3.Y = (SizeY_Content * 0.5);
	_State.Controls.Label_EpilepsyContent.RelativePosition_V3.Y = (SizeY_Content * 0.5) - (SizeY_Title * 0.5);
}

***MainInit***
***
declare CMlFrame Frame_Global;

declare K_State State;
***

***MainStart***
***
Frame_Global <=> (Page.GetFirstChild("frame-global") as CMlFrame);
State.Controls.Frame_EpilepsyWarning <=> (Frame_Global.GetFirstChild("frame-epilepsy-warning") as CMlFrame);
State.Controls.Label_EpilepsyTitle <=> (State.Controls.Frame_EpilepsyWarning.GetFirstChild("label-epilepsy-title") as CMlLabel);
State.Controls.Label_EpilepsyContent <=> (State.Controls.Frame_EpilepsyWarning.GetFirstChild("label-epilepsy-content") as CMlLabel);
State.Controls.Quad_LogoUbisoft <=> (Frame_Global.GetFirstChild("quad-logo-ubisoft") as CMlQuad);
State.Controls.Quad_LogoNadeo <=> (Frame_Global.GetFirstChild("quad-logo-nadeo") as CMlQuad);
State.Controls.Quad_LogoVivox <=> (Frame_Global.GetFirstChild("quad-logo-vivox") as CMlQuad);
State.Controls.Quad_Intro <=> (Frame_Global.GetFirstChild("quad-intro") as CMlQuad);

AlignEpilepsyWarning(State);

State = LoadVideo(State); //< Preload the logo when the game starts
State = SetPage(State, C_Page_Null, False);
***

***MainLoop***
***
foreach (Event in {{{Router::P}}}GetPendingEvents(This)) {
	switch (Event.Type) {
		case "{{{Router::C_Event_EnteringRoute}}}": {
			State.HasDirectLink = False;
			State = LoadVideo(State);
			State = SetPage(State, C_Page_Null, False);
			State = SetPage(State, C_Page_EpilepsyWarning);
		}
		case "{{{Router::C_Event_LeavingRoute}}}": {
			State = UnloadVideo(State);
		}
	}
}

if ({{{Router::P}}}PageIsRunning(This, "{{{RoutePaths::C_Path_Initialization}}}")) {
	if (State.AutoSkipTime > 0 && Now >= State.AutoSkipTime) {
		State = Skip(State);
	}

	// Skip initialization if there is a direct link waiting
	if (ParentApp != Null && ParentApp.ManiaPlanet != Null && ParentApp.ManiaPlanet.DirectLink != Null && !State.HasDirectLink) {
		State.HasDirectLink = True;
		State = SetPage(State, C_Page_LeaveInitialization);
	}

	foreach (Event in {{{ShareMenuNavigation::P}}}GetPendingEvents(This)) {
		switch (Event.MenuNavAction) {
			case CMlScriptEvent::EMenuNavAction::Select: {
				State = Skip(State);
			}
		}
	}

	foreach (Event in PendingEvents) {
		if (Event.Type == CMlScriptEvent::Type::MouseClick) {
			if (Event.ControlId == "button-skip-click") {
				State = Skip(State);
			}
		}
	}
}
***
""",
[
	MenuSounds::ComponentV2(),
	ShareMenuNavigation::ComponentV2(),
	Router::ComponentV2()
],
[]
	);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Update from the ManiaApp
Void Yield() {

}