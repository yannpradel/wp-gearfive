/**
 *	UI module: Ranking server side
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Modes/COTDQualifications/UIModules/Ranking_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Common.Script.txt" as UIModules_Common
#Include "Libs/Nadeo/Trackmania/Modes/COTDQualifications/UIModules/Ranking_Common.Script.txt" as UIModules_Ranking_Common

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_DefaultVisibility False

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_Ranking_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the configuration of the UI module
UIModules_Common::K_ModuleConfig GetConfig() {
	return UIModules_Ranking_Common::C_UIModuleConfig;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Send the top players times to the UI
Void SetLeaderboard(Integer[Text] _Leaderboard) {
	declare netwrite Integer[Text] Net_COTDQualifications_Ranking_Leaderboard for Teams[0] = [];
	declare Boolean NeedUpdate = _Leaderboard.count != Net_COTDQualifications_Ranking_Leaderboard.count;

	if (!NeedUpdate) {
		foreach (AccountId => Time in _Leaderboard) {
			if (Net_COTDQualifications_Ranking_Leaderboard.get(AccountId, -1) != Time) {
				NeedUpdate = True;
				break;
			}
		}
	}

	if (NeedUpdate) {
		declare netwrite Integer Net_COTDQualifications_Ranking_LeaderboardUpdate for Teams[0] = 0;
		Net_COTDQualifications_Ranking_Leaderboard = _Leaderboard;
		Net_COTDQualifications_Ranking_LeaderboardUpdate += 1;
	}
}
Void ResetLeaderboard() {
	SetLeaderboard([]);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Show or hide the UI
Void SetVisibility(CUIConfig _UI, Boolean _Display) {
	if (_UI != Null) {
		declare netwrite Boolean Net_COTDQualifications_Ranking_IsVisible for _UI = C_DefaultVisibility;
		Net_COTDQualifications_Ranking_IsVisible = _Display;
	}
}
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player != Null) {
		SetVisibility(UIManager.GetUI(_Player), _Display);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, C_DefaultVisibility);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	ResetLeaderboard();

	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}