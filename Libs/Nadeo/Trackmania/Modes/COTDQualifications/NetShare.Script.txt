/**
 *	Shared netwrite variables
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Modes/COTDQualifications/NetShare.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/Trackmania/Modes/COTDQualifications/Constants.Script.txt" as COTDConst

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Send the player local race time
Void SetPlayerLocalRaceTime(CUIConfigMgr _UIManager, CSmPlayer _Player, Integer _LocalRaceTime) {
	if (_Player == Null) return;
	declare CUIConfig UI <=> _UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Integer Net_COTDQualifications_NetShare_LocalRaceTime for UI = 0;
	Net_COTDQualifications_NetShare_LocalRaceTime = _LocalRaceTime;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Get our own local race time
Integer GetMyLocalRaceTime(CUIConfig _UI) {
	declare netread Integer Net_COTDQualifications_NetShare_LocalRaceTime for _UI = 0;
	return Net_COTDQualifications_NetShare_LocalRaceTime;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Send the player API race time
Void SetPlayerAPIRaceTime(CUIConfigMgr _UIManager, CSmPlayer _Player, Integer _APIRaceTime) {
	if (_Player == Null) return;
	declare CUIConfig UI <=> _UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Integer Net_COTDQualifications_NetShare_APIRaceTime for UI = 0;
	Net_COTDQualifications_NetShare_APIRaceTime = _APIRaceTime;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Get our own API race time
Integer GetMyAPIRaceTime(CUIConfig _UI) {
	declare netread Integer Net_COTDQualifications_NetShare_APIRaceTime for _UI = 0;
	return Net_COTDQualifications_NetShare_APIRaceTime;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Send the player rank
Void SetPlayerRank(CUIConfigMgr _UIManager, CSmPlayer _Player, Integer _Rank) {
	if (_Player == Null) return;
	declare CUIConfig UI <=> _UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Integer Net_COTDQualifications_NetShare_Rank for UI = 0;
	Net_COTDQualifications_NetShare_Rank = _Rank;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Get our own rank
Integer GetMyRank(CUIConfig _UI) {
	declare netread Integer Net_COTDQualifications_NetShare_Rank for _UI = 0;
	return Net_COTDQualifications_NetShare_Rank;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Send the player join time
Void SetPlayerQualificationsJoinTime(CUIConfigMgr _UIManager, CSmPlayer _Player, Integer _QualificationsJoinTime) {
	if (_Player == Null) return;
	declare CUIConfig UI <=> _UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Integer Net_COTDQualifications_NetShare_QualificationsJoinTime for UI = 0;
	Net_COTDQualifications_NetShare_QualificationsJoinTime = _QualificationsJoinTime;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Get our own join time
Integer GetMyQualificationsJoinTime(CUIConfig _UI) {
	declare netread Integer Net_COTDQualifications_NetShare_QualificationsJoinTime for _UI = 0;
	return Net_COTDQualifications_NetShare_QualificationsJoinTime;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Send the current progress of the qualifications
Void SetQualificationsProgress(CTeam _Team, Integer _QualificationsProgress) {
	declare netwrite Integer Net_COTDQualifications_NetShare_QualificationsProgress for _Team = COTDConst::C_Progress_Null;
	Net_COTDQualifications_NetShare_QualificationsProgress = _QualificationsProgress;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Get the current progress of the qualifications
Integer GetQualificationsProgress(CTeam _Team) {
	declare netread Integer Net_COTDQualifications_NetShare_QualificationsProgress for _Team = COTDConst::C_Progress_Null;
	return Net_COTDQualifications_NetShare_QualificationsProgress;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Send the player record synchronization status
Void SetPlayerIsSynchronizingRecord(CUIConfigMgr _UIManager, CSmPlayer _Player, Boolean _IsSynchronizingRecord) {
	if (_Player == Null) return;
	declare CUIConfig UI <=> _UIManager.GetUI(_Player);
	if (UI == Null) return;
	declare netwrite Boolean Net_COTDQualifications_NetShare_IsSynchronizingRecord for UI = True;
	Net_COTDQualifications_NetShare_IsSynchronizingRecord = _IsSynchronizingRecord;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Get our own record synchronization status
Boolean IsSynchronizingRecord(CUIConfig _UI) {
	declare netread Boolean Net_COTDQualifications_NetShare_IsSynchronizingRecord for _UI = True;
	return Net_COTDQualifications_NetShare_IsSynchronizingRecord;
}