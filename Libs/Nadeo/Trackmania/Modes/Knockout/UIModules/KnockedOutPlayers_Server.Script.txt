/**
 *  UI module: KnockedOutPlayers server side
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/Knockout/UIModules/KnockedOutPlayers_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_Knockout_KnockedOutPlayers"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI content
 *
 *	@param	_Display									True to show
 *																		False to hide
 */
Void DisplayEliminatedPlayer(Text[] _AccountIds, Integer[] _Ranks) {
	declare netwrite Text[] Net_Knockout_KnockedOutPlayers_AccountIds for Teams[0];
	declare netwrite Integer[] Net_Knockout_KnockedOutPlayers_Ranks for Teams[0];
	declare netwrite Integer Net_Knockout_KnockedOutPlayers_EliminatedPlayerUpdate for Teams[0];
	Net_Knockout_KnockedOutPlayers_AccountIds = _AccountIds;
	Net_Knockout_KnockedOutPlayers_Ranks = _Ranks;
	Net_Knockout_KnockedOutPlayers_EliminatedPlayerUpdate = Now;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI content
 *
 *	@param	_Display									True to show
 *																		False to hide
 */
Void DisplayContent(Boolean _Display) {
	declare netwrite Boolean Net_Knockout_KnockedOutPlayers_DisplayContent for Teams[0];
	Net_Knockout_KnockedOutPlayers_DisplayContent = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;

	declare netwrite Boolean Net_Knockout_KnockedOutPlayers_IsVisible for _Player;
	Net_Knockout_KnockedOutPlayers_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	DisplayEliminatedPlayer([], []);
	DisplayContent(False);
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}