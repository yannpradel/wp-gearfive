/**
 *	UI module: EventMessage server side
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Modes/TMWTCommon/UIModules/EventMessage_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Common.Script.txt" as UIModules_Common
#Include "Libs/Nadeo/Trackmania/Modes/TMWTCommon/UIModules/EventMessage_Common.Script.txt" as UIModules_EventMessage_Common

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_DefaultVisibility False
#Const C_DefaultDuration -1
#Const C_Clan_Null 0

#Const UIModules_EventMessage_Common::C_Type_Reset as C_Type_Reset
#Const UIModules_EventMessage_Common::C_Type_Ace as C_Type_Ace
#Const UIModules_EventMessage_Common::C_Type_Victory as C_Type_Victory
#Const UIModules_EventMessage_Common::C_Type_Draw as C_Type_Draw
#Const UIModules_EventMessage_Common::C_Type_Overtime as C_Type_Overtime
#Const UIModules_EventMessage_Common::C_Type_TrackPoint as C_Type_TrackPoint
#Const UIModules_EventMessage_Common::C_Type_MatchPoint as C_Type_MatchPoint
#Const UIModules_EventMessage_Common::C_Type_TrackWin as C_Type_TrackWin
#Const UIModules_EventMessage_Common::C_Type_MatchWin as C_Type_MatchWin

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_EventMessage_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the configuration of the UI module
UIModules_Common::K_ModuleConfig GetConfig() {
	return UIModules_EventMessage_Common::C_UIModuleConfig;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Trigger an event on the client
Void TriggerEvent(Integer _Type, Integer _Clan, Integer _MessageDuration) {
	declare netwrite Integer Net_TMWTCommon_EventMessage_EventUpdate for Teams[0] = 0;
	declare netwrite Int3 Net_TMWTCommon_EventMessage_EventData for Teams[0] = <0, 0, 0>;
	declare Integer MessageEndTime = -1;
	if (_MessageDuration > 0) {
		MessageEndTime = Now + _MessageDuration;
	}
	Net_TMWTCommon_EventMessage_EventData = <_Type, _Clan, MessageEndTime>;
	Net_TMWTCommon_EventMessage_EventUpdate += 1;
}
Void TriggerEvent(Integer _Type) {
	TriggerEvent(_Type, C_Clan_Null, C_DefaultDuration);
}
Void TriggerEventForClan(Integer _Type, Integer _Clan) {
	TriggerEvent(_Type, _Clan, C_DefaultDuration);
}
Void TriggerEventForDuration(Integer _Type, Integer _MessageDuration) {
	TriggerEvent(_Type, C_Clan_Null, _MessageDuration);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	declare CUIConfig UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;

	declare netwrite Boolean Net_TMWTCommon_EventMessage_IsVisible for UI = C_DefaultVisibility;
	Net_TMWTCommon_EventMessage_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, C_DefaultVisibility);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}