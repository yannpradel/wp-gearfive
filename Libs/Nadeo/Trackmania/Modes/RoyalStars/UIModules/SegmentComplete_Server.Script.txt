/**
 *	UI module: SegmentComplete server side
 */
#Const Version		"1.1.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Modes/RoyalStars/UIModules/SegmentComplete_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Common.Script.txt" as UIModules_Common
#Include "Libs/Nadeo/Trackmania/Modes/RoyalStars/UIModules/SegmentComplete_Common.Script.txt" as UIModules_SegmentComplete_Common

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_SegmentComplete_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the configuration of the UI module
UIModules_Common::K_ModuleConfig GetConfig() {
	return UIModules_SegmentComplete_Common::C_UIModuleConfig;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Track the last segment completed by a player in each team
Void PlayerCompleteSegment(
	Integer _TeamId,
	Text _AccountId,
	Integer _Segment,
	Integer _LoopNb,
	Integer _BonusTime
) {
	declare netwrite Integer Net_RoyalStars_SegmentComplete_LastSegmentActivationsUpdate for Teams[0] = UIModules_SegmentComplete_Common::C_Default_UpdateCounter;
	declare netwrite UIModules_SegmentComplete_Common::K_LastSegmentActivation[Integer] Net_RoyalStars_SegmentComplete_LastSegmentActivations for Teams[0] = UIModules_SegmentComplete_Common::C_Default_LastSegmentActivations;
	Net_RoyalStars_SegmentComplete_LastSegmentActivationsUpdate += 1;
	Net_RoyalStars_SegmentComplete_LastSegmentActivations[_TeamId] = UIModules_SegmentComplete_Common::K_LastSegmentActivation {
		Update = Net_RoyalStars_SegmentComplete_LastSegmentActivationsUpdate,
		AccountId = _AccountId,
		Segment = _Segment,
		LoopNb = _LoopNb,
		BonusTime = _BonusTime
	};
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Reset the tracking of all segments completed by the players
Void ResetCompletedSegments() {
	declare netwrite Integer Net_RoyalStars_SegmentComplete_LastSegmentActivationsUpdate for Teams[0] = UIModules_SegmentComplete_Common::C_Default_UpdateCounter;
	declare netwrite UIModules_SegmentComplete_Common::K_LastSegmentActivation[Integer] Net_RoyalStars_SegmentComplete_LastSegmentActivations for Teams[0] = UIModules_SegmentComplete_Common::C_Default_LastSegmentActivations;
	Net_RoyalStars_SegmentComplete_LastSegmentActivations = UIModules_SegmentComplete_Common::C_Default_LastSegmentActivations;
	Net_RoyalStars_SegmentComplete_LastSegmentActivationsUpdate += 1;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	declare CUIConfig UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;

	declare netwrite Boolean Net_RoyalStars_SegmentComplete_DisplayModule for UI = UIModules_SegmentComplete_Common::C_Default_Visibility;
	Net_RoyalStars_SegmentComplete_DisplayModule = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, UIModules_SegmentComplete_Common::C_Default_Visibility);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	ResetCompletedSegments();

	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}