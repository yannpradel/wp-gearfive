/**
 *  UI module: EndRaceMenu server side
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/PlayMap/UIModules/EndRaceMenu_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_PlayMap_EndRaceMenu"

#Const C_ReplaySaveStatus_Null 0
#Const C_ReplaySaveStatus_Success 1
#Const C_ReplaySaveStatus_Fail 2

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Inform the UI that a new round started
Void SetTimeDiff(Boolean _Enable, Integer _TimeDiff) {
	declare netwrite Boolean Net_PlayMap_EndRaceMenu_TimeDiffEnabled for Teams[0];
	declare netwrite Integer Net_PlayMap_EndRaceMenu_TimeDiff for Teams[0];
	Net_PlayMap_EndRaceMenu_TimeDiffEnabled = _Enable;
	Net_PlayMap_EndRaceMenu_TimeDiff = _TimeDiff;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Allow the user to view the PB replay or not
Void SetCanViewReplay(Boolean _CanViewReplay) {
	declare netwrite Boolean Net_PlayMap_EndRaceMenu_CanViewReplay for Teams[0];
	Net_PlayMap_EndRaceMenu_CanViewReplay = _CanViewReplay;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Inform the UI that the replay has been saved
Void SetReplaySaveStatus(Integer _SaveStatus) {
	declare netwrite Integer Net_PlayMap_EndRaceMenu_ReplaySaveStatus for Teams[0];
	Net_PlayMap_EndRaceMenu_ReplaySaveStatus = _SaveStatus;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Is the player playing against a replay or not
Void SetIsAgainstReplay(Boolean _IsAgainstReplay) {
	declare netwrite Boolean Net_PlayMap_EndRaceMenu_IsAgainstReplay for Teams[0];
	Net_PlayMap_EndRaceMenu_IsAgainstReplay = _IsAgainstReplay;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;

	declare netwrite Boolean Net_PlayMap_EndRaceMenu_IsVisible for _Player;
	Net_PlayMap_EndRaceMenu_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
	SetTimeDiff(False, 0);
	SetCanViewReplay(False);
	SetReplaySaveStatus(C_ReplaySaveStatus_Null);
	SetIsAgainstReplay(False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}