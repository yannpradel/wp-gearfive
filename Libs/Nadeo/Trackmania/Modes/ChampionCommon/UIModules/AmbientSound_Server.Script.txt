/**
 *  UI module: AmbientSound server side
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/ChampionCommon/UIModules/AmbientSound_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/Trackmania/Modes/ChampionCommon/Constants.Script.txt" as ChampionConst
#Include "Libs/Nadeo/Trackmania/Modes/ChampionCommon/PlayerProfiles.Script.txt" as PlayerProfiles

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_ChampionTMGL_AmbientSound"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Enable or disable the ambient sound
Void Enable(Boolean _Enabled) {
	declare netwrite Integer Net_ChampionTMGL_AmbientSound_Update for Teams[0];
	declare netwrite Boolean Net_ChampionTMGL_AmbientSound_Enabled for Teams[0];
	Net_ChampionTMGL_AmbientSound_Enabled = _Enabled;
	Net_ChampionTMGL_AmbientSound_Update += 1;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Update the race state
Void SetRaceState(Integer _RaceState) {
	declare netwrite Integer Net_ChampionTMGL_AmbientSound_Update for Teams[0];
	declare netwrite Integer Net_ChampionTMGL_AmbientSound_RaceState for Teams[0];
	Net_ChampionTMGL_AmbientSound_RaceState = _RaceState;
	Net_ChampionTMGL_AmbientSound_Update += 1;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Play cheers sounds for the given account id
Void PlayCheers(Text _AccountId) {
	if (_AccountId == "") {
		declare netwrite Integer Net_ChampionTMGL_AmbientSound_Update for Teams[0];
		declare netwrite Integer Net_ChampionTMGL_AmbientSound_CheersUpdate for Teams[0];
		declare netwrite Text Net_ChampionTMGL_AmbientSound_CheersTarget for Teams[0];
		Net_ChampionTMGL_AmbientSound_CheersTarget = "";
		Net_ChampionTMGL_AmbientSound_CheersUpdate += 1;
		Net_ChampionTMGL_AmbientSound_Update += 1;
	} else if (PlayerProfiles::PlayerProfileExists(_AccountId)) {
		declare netwrite Integer Net_ChampionTMGL_AmbientSound_Update for Teams[0];
		declare netwrite Integer Net_ChampionTMGL_AmbientSound_CheersUpdate for Teams[0];
		declare netwrite Text Net_ChampionTMGL_AmbientSound_CheersTarget for Teams[0];
		Net_ChampionTMGL_AmbientSound_CheersTarget = PlayerProfiles::GetPlayerProfile(_AccountId).Cheers;
		Net_ChampionTMGL_AmbientSound_CheersUpdate += 1;
		Net_ChampionTMGL_AmbientSound_Update += 1;
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;

	declare netwrite Boolean Net_ChampionTMGL_AmbientSound_IsVisible for _Player;
	Net_ChampionTMGL_AmbientSound_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	Enable(False);
	SetRaceState(ChampionConst::C_RaceState_None);
	PlayCheers("");

	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}