/**
 *  UI module: ConnectionError client side
 */
#Const Version		"1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/UIModules/ConnectionError_Client.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/CMGame/Utils/Stylesheet.Script.txt" as Stylesheet
#Include "Libs/Nadeo/Trackmania/Stores/UserStore_ML.Script.txt" as UserStore
#Include "Libs/Nadeo/CMGame/Components/ExpendableAsset.Script.txt" as ExpendableAsset

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_ConnectionError"
#Const C_Type CUILayer::EUILayerType::Normal

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the module manialink
 *
 *  @return                           The module manialink
 */
Text GetML() {
	return MV::Create(
C_Id, 3,
"""
<stylesheet>
	<style class="text-extrabold" halign="center" valign="center2" textprefix="$i$t" textfont="{{{Stylesheet::GetFont(Stylesheet::C_Font_Weight_ExtraBold)}}}" textcolor="FFF"/>
</stylesheet>

<frame id="frame-global" pos="0 77" z-index="10" hidden="1" >
	<frameinstance id="frame-background" modelid="{{{ExpendableAsset::C_Name}}}" data-width="200" data-height="15" data-styles="{{{ExpendableAsset::C_Style_EdgesRounded}}}" data-color="{{{Stylesheet::GetColorHex6(Stylesheet::C_Color_AccentThree)}}}" data-opacity="0.95" z-index="0"/>
	<label id="label-description" size="180 15" class="text-extrabold" textsize="2.5" autonewline="1" maxline="3" z-index="2"/>
</frame>
""",
"""
#Include "TextLib" as TL
#Include "Libs/Nadeo/CMGame/Utils/Error.Script.txt" as Error
#Include "Libs/Nadeo/CMGame/Utils/Platform.Script.txt" as Platform
""",
"""
Boolean DisplayConnectionError() {
	return (
		UserMgr != Null &&
		UserMgr.MainUserWebServicesInfo.ConnectionStatus != CMasterServerUser::EMasterServerConnectionStatus::Connected &&
		!{{{UserStore::P}}}IsOfflineMode()
	);
}

***MainInit***
***
declare CMlFrame Frame_Global;
declare CMlLabel Label_Description;

declare Boolean DisplayModule;
declare Boolean DisplayConnectionError;
***

***MainStart***
***
Frame_Global <=> (Page.GetFirstChild("frame-global") as CMlFrame);
Label_Description <=> (Frame_Global.GetFirstChild("label-description") as CMlLabel);

DisplayModule = Frame_Global.Visible;
DisplayConnectionError = False;
***

***MainLoop***
***
if (PageIsVisible) {
	if (InputPlayer  != Null) {
		declare netread Boolean Net_Campaign_ConnectionError_IsVisible for InputPlayer ;
		if (
			DisplayModule != Net_Campaign_ConnectionError_IsVisible ||
			DisplayConnectionError != DisplayConnectionError()
		) {
			DisplayModule = Net_Campaign_ConnectionError_IsVisible;
			DisplayConnectionError = DisplayConnectionError();
			Frame_Global.Visible = DisplayModule && DisplayConnectionError;
			if (Frame_Global.Visible) {
				Label_Description.SetText(Error::GetConnectionErrorMessage(UserMgr.MainUserWebServicesInfo.LastConnectionErrorType, UserMgr.MainUserWebServicesInfo.LastConnectionErrorCode, "$<$i"^Platform::GetNetworkName(System)^"$>"));
			}
		}
	}

	if (InputPlayer == Null && DisplayModule) {
		DisplayModule = False;
		Frame_Global.Visible = DisplayModule;
	}
}
***
""",
[UserStore::ComponentV2(), ExpendableAsset::ComponentV2()],
[]
	);
}