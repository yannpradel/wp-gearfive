/**
 *  UI module: NetShare server side
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/UIModules/NetShare_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/Trackmania/Structures/CampaignStruct.Script.txt" as CampaignStruct

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Force the update of the NetShare values
Void ForceUpdate() {
	declare netwrite Integer Net_Campaign_NetShare_ForceUpdate for Teams[0];
	Net_Campaign_NetShare_ForceUpdate = Now;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set the current map model
 *
 *	@param	_Map											The map to set
 */
Void SetMap(CampaignStruct::LibCampaignStruct_K_Map _Map) {
	declare netwrite CampaignStruct::LibCampaignStruct_K_Map Net_Campaign_NetShare_Map for Teams[0];
	Net_Campaign_NetShare_Map = _Map;
	ForceUpdate();
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set the current campaign model
 *
 *	@param	_Campaign											The campaign to set
 */
Void SetCampaign(CampaignStruct::LibCampaignStruct_K_Campaign _Campaign) {
	declare netwrite CampaignStruct::LibCampaignStruct_K_Campaign Net_Campaign_NetShare_Campaign for Teams[0];
	Net_Campaign_NetShare_Campaign = _Campaign;
	ForceUpdate();
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Inform the UI that the there is a next map
Void SetHasNextMap(Boolean _HasNextMap) {
	declare netwrite Boolean Net_Campaign_NetShare_HasNextMap for Teams[0];
	Net_Campaign_NetShare_HasNextMap = _HasNextMap;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Are the rankings currently loading ?
Void SetRankingsAreLoading(Boolean _Loading) {
	declare netwrite Boolean Net_Campaign_NetShare_RankingsAreLoading for Teams[0];
	Net_Campaign_NetShare_RankingsAreLoading = _Loading;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	SetMap(CampaignStruct::LibCampaignStruct_K_Map {});
	SetCampaign(CampaignStruct::LibCampaignStruct_K_Campaign {
		Id = CampaignStruct::C_Campaign_NullId
	});
	SetHasNextMap(False);
	SetRankingsAreLoading(False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}