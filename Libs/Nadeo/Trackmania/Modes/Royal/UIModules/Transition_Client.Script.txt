/**
 *	UI module: Transition client side
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Modes/Royal/UIModules/Transition_Client.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Client.Script.txt" as UIModules
#Include "Libs/Nadeo/CMGame/Utils/Stylesheet.Script.txt" as Stylesheet
#Include "Libs/Nadeo/Trackmania/Modes/Royal/UIModules/Transition_Common.Script.txt" as UIModules_Transition_Common
#Include "Libs/Nadeo/Trackmania/Modes/Royal/UIModules/ZIndex.Script.txt" as ZIndex

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_Transition_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the type of layer of the UI module
CUILayer::EUILayerType GetLayerType() {
	return UIModules_Transition_Common::C_LayerType;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the module manialink
 *
 *  @return                           The module manialink
 */
Text GetML() {
	return MV::Create(
GetId(), 3,
"""
<frame id="frame-global" z-index="{{{ZIndex::C_ZIndex_Transition}}}" hidden="1">
	<frame {{{UIModules::CustomizableUIModule(UIModules_Transition_Common::C_UIModuleConfig)}}}>
		<quad id="quad-transition" pos="0 180" size="320 180" halign="center" valign="center" bgcolor="{{{Stylesheet::GetColorHex6(Stylesheet::C_Color_BGDark)}}}" fullscreen="1" hidden="1" />
	</frame>
</frame>
""",
"""
#Const C_TransitionDuration {{{UIModules_Transition_Common::C_TransitionDuration}}}
""",
"""
Boolean PlayTransition(CMlQuad _Quad_Transition, Boolean _Enabled) {
	declare Real Opacity = 0.;
	declare Integer Hidden = 1;
	declare Real PosY = 180.;
	_Quad_Transition.RelativePosition_V3.Y = 0.;

	if (_Enabled) {
		Opacity = 1.;
		Hidden = 0;
		PosY = 0.;
		_Quad_Transition.RelativePosition_V3.Y = -180.;
	}

	_Quad_Transition.Visible = True;
	AnimMgr.Flush(_Quad_Transition);
	AnimMgr.Add(_Quad_Transition, "<a pos=\"0 "^PosY^"\" hidden=\""^Hidden^"\" />", C_TransitionDuration, CAnimManager::EAnimManagerEasing::Linear);

	return _Enabled;
}

Boolean UpdateTransition(CMlQuad _Quad_Transition, Int2 _Transition, Boolean _Enabled) {
	declare Boolean Enabled = _Enabled;

	if (_Transition.X >= 0 && _Transition.X <= GameTime) {
		if (_Transition.Y < 0 || _Transition.Y > GameTime) {
			if (!Enabled) {
				Enabled = PlayTransition(_Quad_Transition, True);
			}
		} else if (Enabled) {
			Enabled = PlayTransition(_Quad_Transition, False);
		}
	} else if (Enabled) {
		Enabled = PlayTransition(_Quad_Transition, False);
	}

	return Enabled;
}

***MainInit***
***
declare CMlFrame Frame_Global;
declare CMlQuad Quad_Transition;

declare netread Boolean Net_Royal_Transition_IsVisible for UI;
declare netread Int2 Net_Royal_Transition_Transition for Teams[0];

declare Boolean DisplayModule;
declare Int2 Transition;
declare Boolean TransitionEnabled;
***

***MainStart***
***
Frame_Global <=> (Page.GetFirstChild("frame-global") as CMlFrame);
Quad_Transition <=> (Frame_Global.GetFirstChild("quad-transition") as CMlQuad);

DisplayModule = Frame_Global.Visible;
Transition = Net_Royal_Transition_Transition;
TransitionEnabled = UpdateTransition(Quad_Transition, Transition, Quad_Transition.Visible);
***

***MainLoop***
***
if (PageIsVisible) {
	if (DisplayModule != Net_Royal_Transition_IsVisible) {
		DisplayModule = Net_Royal_Transition_IsVisible;
		Frame_Global.Visible = Net_Royal_Transition_IsVisible;
	}

	if (Frame_Global.Visible) {
		if (Transition != Net_Royal_Transition_Transition) {
			Transition = Net_Royal_Transition_Transition;
			TransitionEnabled = UpdateTransition(Quad_Transition, Transition, TransitionEnabled);
		}

		if (TransitionEnabled) {
			TransitionEnabled = UpdateTransition(Quad_Transition, Transition, TransitionEnabled);
		}
	}
}
***
""",
[
	UIModules::Component()
],
[]
	);
}