/**
 *	UI module: PreLoadingScreen client side
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Modes/Royal/UIModules/PreLoadingScreen_Client.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Client.Script.txt" as UIModules
#Include "Libs/Nadeo/Trackmania/MainMenu/Constants.Script.txt" as MenuConst
#Include "Libs/Nadeo/Trackmania/Components/MainBackground.Script.txt" as MainBackground
#Include "Libs/Nadeo/Trackmania/Modes/Royal/UIModules/PreLoadingScreen_Common.Script.txt" as UIModules_PreLoadingScreen_Common
#Include "Libs/Nadeo/Trackmania/Modes/Royal/UIModules/ZIndex.Script.txt" as ZIndex

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_PreLoadingScreen_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the type of layer of the UI module
CUILayer::EUILayerType GetLayerType() {
	return UIModules_PreLoadingScreen_Common::C_LayerType;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the module manialink
 *
 *  @return                           The module manialink
 */
Text GetML() {
	return MV::Create(
GetId(), 3,
"""
<frame id="frame-global" z-index="{{{ZIndex::C_ZIndex_PreLoading}}}" hidden="1">
	<frame {{{UIModules::CustomizableUIModule(UIModules_PreLoadingScreen_Common::C_UIModuleConfig)}}}>
		<frameinstance modelid="{{{MainBackground::C_Name}}}" z-index="0" />
	</frame>
</frame>
""",
"""
#Struct K_State {
	CMlFrame Frame_Global;
	Boolean DisplayModule;
	Integer DisplayAnimEndTime;
}

#Const C_DisplayAnimDuration {{{dump(UIModules_PreLoadingScreen_Common::C_FadeInDuration)}}}
#Const C_BackgroundImageUrl {{{dump(MenuConst::C_ImageUrl_Menu_Matchmaking_BG_Royal)}}}
""",
"""
K_State SetVisibility(K_State _State, Boolean _DisplayModule) {
	declare K_State State = _State;

	if (State.DisplayModule != _DisplayModule) {
		State.DisplayModule = _DisplayModule;
		State.DisplayAnimEndTime = Now + C_DisplayAnimDuration;

		{{{MainBackground::P}}}SetVisibility(State.DisplayModule, C_DisplayAnimDuration);
		if (State.DisplayModule) {
			State.Frame_Global.Visible = True;
		}
	}

	return State;
}

***MainInit***
***
declare netread Boolean Net_Royal_PreLoadingScreen_IsVisible for UI;

declare K_State State;
***

***MainStart***
***
State.Frame_Global <=> (Page.GetFirstChild("frame-global") as CMlFrame);

{{{MainBackground::P}}}ChangeBackgroundImages(C_BackgroundImageUrl, False);
{{{MainBackground::P}}}SetVisibility(State.Frame_Global.Visible);
State = SetVisibility(State, State.Frame_Global.Visible);
***

***MainLoop***
***
if (PageIsVisible) {
	if (State.DisplayModule != Net_Royal_PreLoadingScreen_IsVisible) {
		State = SetVisibility(State, Net_Royal_PreLoadingScreen_IsVisible);
	}

	if (State.DisplayAnimEndTime >= 0 && State.DisplayAnimEndTime <= Now) {
		State.DisplayAnimEndTime = -1;
		State.Frame_Global.Visible = State.DisplayModule;
	}
}
***
""",
[
	UIModules::Component(),
	MainBackground::Component()
],
[]
	);
}