/**
 *  UI module: BestRaceViewer server side
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/TimeAttack/UIModules/BestRaceViewer_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Common.Script.txt" as UIModules_Common
#Include "Libs/Nadeo/Trackmania/Modes/TimeAttack/UIModules/BestRaceViewer_Common.Script.txt" as UIModules_BestRaceViewer_Common

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_BestRaceViewer_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the configuration of the UI module
UIModules_Common::K_ModuleConfig GetConfig() {
	return UIModules_BestRaceViewer_Common::C_UIModuleConfig;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Enable previous race display for specific player
 *
 *	@param	_Player												The Player to update
 *	@param	_PrevDisplay									True if previous race is displayed
 */
Void SetPrevDisplay(CPlayer _Player, Boolean _PrevDisplay) {
	if (_Player != Null) {
		declare PlayerUI = UIManager.GetUI(_Player);
		if (PlayerUI != Null) {
			declare netwrite Boolean Net_TimeAttack_BestRaceViewer_DisplayPrev for PlayerUI = True;
			Net_TimeAttack_BestRaceViewer_DisplayPrev = _PrevDisplay;
		}
	}
}
Void SetPrevDisplay(Boolean _PrevDisplay) {
	foreach (Player in Players) {
		SetPrevDisplay(Player, _PrevDisplay);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set custom ranks for each player
 *
 *	@param	_CustomRanks										The custom ranks
 */
Void SetCustomRanks(Integer[Text] _CustomRanks, Integer _CustomCardinal) {
	foreach (Player in Players) {
		if (Player == Null) continue;
		declare PlayerUI = UIManager.GetUI(Player);
		if (PlayerUI == Null) continue;
		declare Integer CustomRank = -1;
		if (_CustomRanks.existskey(Player.User.WebServicesUserId)) CustomRank = _CustomRanks[Player.User.WebServicesUserId];
		declare netwrite Integer Net_TimeAttack_BestRaceViewer_CustomRank for PlayerUI = -1;
		Net_TimeAttack_BestRaceViewer_CustomRank = CustomRank;
	}
	declare netwrite Integer Net_TimeAttack_BestRaceViewer_CustomCardinal for Teams[0] = -1;
	Net_TimeAttack_BestRaceViewer_CustomCardinal = _CustomCardinal;
}

Void SetRankVisibility(Boolean _IsVisible) {
	declare netwrite Boolean Net_TimeAttack_BestRaceViewer_RankIsVisible for Teams[0] = False;
	Net_TimeAttack_BestRaceViewer_RankIsVisible = _IsVisible;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;

	declare netwrite Boolean Net_TimeAttack_BestRaceViewer_IsVisible for _Player;
	Net_TimeAttack_BestRaceViewer_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, False);
	SetPrevDisplay(_Player, True);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	SetCustomRanks([], -1);
	SetRankVisibility(False);
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}