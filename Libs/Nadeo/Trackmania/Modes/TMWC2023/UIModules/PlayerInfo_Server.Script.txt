/**
 *	UI module: PlayerInfo server side
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Modes/TMWC2023/UIModules/PlayerInfo_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Includes
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Common.Script.txt" as UIModules_Common
#Include "Libs/Nadeo/Trackmania/Modes/TMWC2023/Structs.Script.txt" as Structs
#Include "Libs/Nadeo/Trackmania/Modes/TMWC2023/UIModules/PlayerInfo_Common.Script.txt" as UIModules_PlayerInfo_Common

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_DefaultVisibility False

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_PlayerInfo_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the configuration of the UI module
UIModules_Common::K_ModuleConfig GetConfig() {
	return UIModules_PlayerInfo_Common::C_UIModuleConfig;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Update Player stats
 *
 *	@param	_Score										The player to update
 */
Void UpdatePlayerStats(CScore _Score) {
	if (_Score == Null) return;
	declare netwrite Integer Net_TMWC2023_PlayerInfo_PlayerStatsUpdate for _Score = 0;
	Net_TMWC2023_PlayerInfo_PlayerStatsUpdate += 1;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Set Player Personal Best
 *
 *	@param	_Score										The score of the owner
 *	@param	_PersonalBest						The time of the Personal best
 *																		False to hide
 */
Void SetPersonalBest(CScore _Score, Integer _PersonalBest) {
	if (_Score == Null) return;

	declare netwrite Integer Net_TMWC2023_PlayerInfo_PersonalBest for _Score;
	Net_TMWC2023_PlayerInfo_PersonalBest = _PersonalBest;

	UpdatePlayerStats(_Score);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Add a run to the Player
 *
 *	@param	_Score										The Score to update
 */
Void SetPlayerStats(CScore _Score, Structs::K_PlayerStats _PlayerStats) {
	if (_Score == Null) return;

	declare netwrite Structs::K_PlayerStats Net_TMWC2023_PlayerInfo_PlayerStats for _Score = Structs::K_PlayerStats {};
	Net_TMWC2023_PlayerInfo_PlayerStats = _PlayerStats;

	UpdatePlayerStats(_Score);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Reset All Players stats
Void ResetAllPlayerStats() {
	foreach (Score in Scores) {
		declare netwrite Structs::K_PlayerStats Net_TMWC2023_PlayerInfo_PlayerStats for Score = Structs::K_PlayerStats {};
		Net_TMWC2023_PlayerInfo_PlayerStats = Structs::K_PlayerStats {};

		UpdatePlayerStats(Score);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;
	declare CUIConfig UI <=> UIManager.GetUI(_Player);
	if (UI == Null) return;

	declare netwrite Boolean Net_TMWC2023_PlayerInfo_IsVisible for UI = C_DefaultVisibility;
	Net_TMWC2023_PlayerInfo_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, C_DefaultVisibility);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	ResetAllPlayerStats();
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}