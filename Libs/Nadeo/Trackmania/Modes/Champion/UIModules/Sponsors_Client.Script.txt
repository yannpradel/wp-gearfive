/**
 *  UI module: Sponsors client side
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/Champion/UIModules/Sponsors_Client.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_Champion_Sponsors"
#Const C_Type CUILayer::EUILayerType::Normal
#Const C_SponsorDuration 10000
#Const C_EmptyDuration 5000
#Const C_TransitionDuration 1000

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the module manialink
 *
 *  @return                           The module manialink
 */
Text GetML() {
	return MV::Create(
C_Id, 3,
"""
<frame z-index="-2" hidden="1" id="frame-global">
	<frame pos="130 75">
		<quad size="25 25" valign="center" keepratio="fit" opacity="0" id="quad-sponsor-1"/>
		<quad size="25 25" valign="center" keepratio="fit" opacity="0" id="quad-sponsor-2"/>
	</frame>
</frame>
""",
"""
#Include "TextLib" as TL
#Include "Libs/Nadeo/TMGame/Modes/MV_Utils.Script.txt" as MV_Utils
""",
"""
***MainInit***
***
declare CMlFrame Frame_Global;
declare CMlQuad Quad_Sponsor1;
declare CMlQuad Quad_Sponsor2;

declare netread Text Net_Champion_Sponsors_SponsorsUrl for Teams[0];

declare Boolean DisplayModule;
declare Text NetSponsorsUrl;
declare Text[] SponsorsUrl;
declare Integer NextSponsorTime;
declare Integer NextSponsorKey;
***

***MainStart***
***
Frame_Global <=> (Page.GetFirstChild("frame-global") as CMlFrame);
Quad_Sponsor1 <=> (Frame_Global.GetFirstChild("quad-sponsor-1") as CMlQuad);
Quad_Sponsor2 <=> (Frame_Global.GetFirstChild("quad-sponsor-2") as CMlQuad);

DisplayModule = Frame_Global.Visible;
NetSponsorsUrl = "";
SponsorsUrl = [];
NextSponsorTime = -1;
NextSponsorKey = -1;
***

***MainLoop***
***
if (PageIsVisible) {
	declare Owner <=> MV_Utils::GetOwner(This);
	if (Owner != Null) {
		declare netread Boolean Net_Champion_Sponsors_IsVisible for Owner;
		if (DisplayModule != (Net_Champion_Sponsors_IsVisible && IsSpectatorClient)) {
			DisplayModule = (Net_Champion_Sponsors_IsVisible && IsSpectatorClient);
			Frame_Global.Visible = DisplayModule;
		}
	}

	if (Owner == Null && DisplayModule) {
		DisplayModule = False;
		Frame_Global.Visible = DisplayModule;
	}

	if (Frame_Global.Visible) {
		if (NetSponsorsUrl != Net_Champion_Sponsors_SponsorsUrl) {
			NetSponsorsUrl = Net_Champion_Sponsors_SponsorsUrl;
			SponsorsUrl = TL::Split(",", NetSponsorsUrl);
			if (SponsorsUrl.count == 1) {
				Quad_Sponsor1.ImageUrl = SponsorsUrl[0];
				Quad_Sponsor1.Opacity = 1.;
				NextSponsorTime = -1;
			} else if (SponsorsUrl.count > 1) {
				NextSponsorTime = Now;
			}
		}

		if (SponsorsUrl.count > 1 && Now >= NextSponsorTime && NextSponsorTime >= 0) {
			if (!SponsorsUrl.existskey(NextSponsorKey)) {
				NextSponsorKey = 0;
			}
			declare Text NextSponsor = SponsorsUrl[NextSponsorKey];
			Quad_Sponsor2.ImageUrl = Quad_Sponsor1.ImageUrl;
			Quad_Sponsor2.Opacity = Quad_Sponsor1.Opacity;
			AnimMgr.Add(Quad_Sponsor2, "<anim opacity=\"0\" />", {{{C_TransitionDuration}}}, CAnimManager::EAnimManagerEasing::QuadOut);
			if (NextSponsor == "_") {
				Quad_Sponsor1.ImageUrl = "";
				NextSponsorTime = Now + {{{C_EmptyDuration}}};
			} else {
				Quad_Sponsor1.ImageUrl = NextSponsor;
				NextSponsorTime = Now + {{{C_SponsorDuration}}};
			}
			Quad_Sponsor1.Opacity = 0.;
			AnimMgr.Add(Quad_Sponsor1, "<anim opacity=\"1\" />", {{{C_TransitionDuration}}}, CAnimManager::EAnimManagerEasing::QuadOut);
			NextSponsorKey += 1;
		}
		if (SponsorsUrl.count <= 0 && NextSponsorTime > 0) {
			NextSponsorTime = -1;
		}
	}
}
***
""",
[],
[]
	);
}