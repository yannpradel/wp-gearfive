/**
 *  UI module: BestLap server side
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/Champion/UIModules/BestLap_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModule_Champion_BestLap"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Structures
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Struct K_BestLapTimes {
	Integer Lap;
	Text[] Names;
	Text[] Logins;
	Text[] WebServicesIds;
	Integer[] Times;
	Integer[] Points;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/**	Send the top 3 of a given lap
 *
 *	@param	_Top3											The top 3 [ScoreId => LapTime]
 *	@param	_Lap											The lap number of the top
 */
Void SetTop3(Integer[Ident] _Top3, Integer _Lap) {
	declare netwrite K_BestLapTimes Net_Champion_BestLap_BestLapTimes for Teams[0];
	declare netwrite Integer Net_Champion_BestLap_BestLapTimesUpdate for Teams[0];

	Net_Champion_BestLap_BestLapTimes = K_BestLapTimes {
		Lap = _Lap
	};
	foreach (ScoreId => LapTime in _Top3) {
		if (Scores.existskey(ScoreId)) {
			Net_Champion_BestLap_BestLapTimes.Names.add(Scores[ScoreId].User.Name);
			Net_Champion_BestLap_BestLapTimes.Logins.add(Scores[ScoreId].User.Login);
			Net_Champion_BestLap_BestLapTimes.WebServicesIds.add(Scores[ScoreId].User.WebServicesUserId);
			Net_Champion_BestLap_BestLapTimes.Points.add(Scores[ScoreId].Points);
			Net_Champion_BestLap_BestLapTimes.Times.add(LapTime);
		}
	}

	Net_Champion_BestLap_BestLapTimesUpdate = Now;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;

	declare netwrite Boolean Net_Champion_BestLap_IsVisible for _Player;
	Net_Champion_BestLap_IsVisible = _Display;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	SetTop3([], -1);

	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}