/**
 *	Cup of the Day state management
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Modes/TimeAttackDaily/CupState.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/Trackmania/Modes/TimeAttackDaily/DailyRequestManager.Script.txt" as RequestManager
#Include "Libs/Nadeo/Trackmania/Modes/TimeAttackDaily/UIModules/NetShare_Server.Script.txt" as UIModules_NetShare
#Include "Libs/Nadeo/Trackmania/Modes/TimeAttackDaily/Constants.Script.txt" as Constants

Integer SetCupState(Integer _CupState, Integer _QualificationsEndTime) {
	declare Integer CupState = Constants::C_TimeAttackDaily_CupState_None;
	if (_QualificationsEndTime >= Now) {
		if (_QualificationsEndTime - Constants::C_TimeAttackDaily_RegistrationEndDelay < Now) {
			CupState = Constants::C_TimeAttackDaily_CupState_RegistrationsOver;
		} else {
			CupState = Constants::C_TimeAttackDaily_CupState_Qualifications;
		}
	} else if (_QualificationsEndTime + Constants::C_TimeAttackDaily_ServerDutyEndDelay < Now) {
		CupState = Constants::C_TimeAttackDaily_CupState_ServerDutyIsOver;
	} else if (_QualificationsEndTime + Constants::C_TimeAttackDaily_MatchNotJoinableAnymoreDelay < Now) {
		CupState = Constants::C_TimeAttackDaily_CupState_MatchNotJoinableAnymore;
	} else if (_QualificationsEndTime < Now) {
		CupState = Constants::C_TimeAttackDaily_CupState_WaitingForMatch;
	}
	if (CupState != _CupState) {
		UIModules_NetShare::SetCupState(CupState);
		RequestManager::ListenToRanksUpdate(
			CupState == Constants::C_TimeAttackDaily_CupState_Qualifications ||
			CupState == Constants::C_TimeAttackDaily_CupState_RegistrationsOver ||
			CupState == Constants::C_TimeAttackDaily_CupState_WaitingForMatch // continue listening to ranks to display trophies to players joining
		);
		RequestManager::SetRegistrationsState(CupState == Constants::C_TimeAttackDaily_CupState_Qualifications);
		RequestManager::ListenToPlayerMatches(CupState == Constants::C_TimeAttackDaily_CupState_WaitingForMatch);
	}
	return CupState;
}