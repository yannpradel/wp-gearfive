/**
 *  UI module: NextRoundPopup server side
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/HotSeat/UIModules/NextRoundPopUp_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/Trackmania/Modes/HotSeat/Consts.Script.txt" as Consts

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModules_HotSeat_NextRoundPopUp"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;

	declare netwrite Boolean Net_HotSeat_NextRoundPopUp_IsVisible for _Player;
	Net_HotSeat_NextRoundPopUp_IsVisible = _Display;
}

//Open next round menu
Void OpenMenu() {
	declare netwrite Boolean Net_HotSeat_NextRoundPopUp_MenuOpen for Teams[0];
	Net_HotSeat_NextRoundPopUp_MenuOpen = True;
}

//Check if the animation is finished
Boolean IsMenuOpen() {
	declare netwrite Boolean Net_HotSeat_NextRoundPopUp_MenuOpen for Teams[0];
	if (Net_HotSeat_NextRoundPopUp_MenuOpen) {
		foreach (Event in UIManager.PendingEvents) {
			if (Event.Type == CUIConfigEvent::EType::OnLayerCustomEvent
					&& Event.CustomEventType == Consts::C_NextRoundPopUp_Closed) {
				Net_HotSeat_NextRoundPopUp_MenuOpen = False;
			}
		}
	}
	return Net_HotSeat_NextRoundPopUp_MenuOpen;
}

//Only needed if we want to forcefully close the menu
Void CloseMenu() {
	declare netwrite Boolean Net_HotSeat_NextRoundPopUp_MenuOpen for Teams[0];
	Net_HotSeat_NextRoundPopUp_MenuOpen = False;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}