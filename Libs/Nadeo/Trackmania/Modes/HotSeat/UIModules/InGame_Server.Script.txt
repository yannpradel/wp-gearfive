/**
 *  UI module: InGame UI server side
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/Modes/HotSeat/UIModules/InGame_Server.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Id "UIModules_HotSeat_InGame"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Show or hide the UI
 *
 *	@param	_Player										The player to update
 *	@param	_Display									True to show
 *																		False to hide
 */
Void SetVisibility(CPlayer _Player, Boolean _Display) {
	if (_Player == Null) return;

	declare netwrite Boolean Net_HotSeat_InGame_IsVisible for _Player;
	Net_HotSeat_InGame_IsVisible = _Display;
}

/**	Force (in the UI) the energy value of the current player (to update it without refreshing the full player list)
 *		@param	_EnergyAmount		use -1 to reset
 */
Void ForcePlayerEnergyAmount(Integer _EnergyAmount) {
	declare netwrite Integer Net_HotSeat_InGame_ForcedPlayerEnergyAmount for Teams[0];
	Net_HotSeat_InGame_ForcedPlayerEnergyAmount	= _EnergyAmount;
}

//	Init players' UI (will reset the forced energy value)
Void InitPlayers() {
	declare netwrite Integer Net_HotSeat_InGame_InitVersion for Teams[0];
	Net_HotSeat_InGame_InitVersion	+= 1;
	ForcePlayerEnergyAmount(-1);
}

//	Refresh players' UI, with rank change animation (will reset the forced energy value)
Void RefreshPlayers() {
	declare netwrite Integer Net_HotSeat_InGame_RefreshVersion for Teams[0];
	Net_HotSeat_InGame_RefreshVersion	+= 1;
	ForcePlayerEnergyAmount(-1);
}

Void SetMaxEnergyAmount(Integer _MaxEnergyAmount) {
	declare netwrite Integer Net_HotSeat_InGame_MaxEnergyAmount for Teams[0];
	Net_HotSeat_InGame_MaxEnergyAmount	= _MaxEnergyAmount;
}

/**	Inform the UI of the current player racing state
 *		@param	_PlayerStarted		True if the player is racing (and consuming energy), else False
 */
Void SetPlayerStarted(Boolean _PlayerStarted) {
	declare netwrite Boolean Net_HotSeat_InGame_PlayerStarted for Teams[0];
	Net_HotSeat_InGame_PlayerStarted = _PlayerStarted;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Initialize a player
 *
 *	@param	_Player										The player to initialize
 */
Void InitializePlayer(CPlayer _Player) {
	if (_Player == Null) return;

	SetVisibility(_Player, False);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Unload the library
Void Unload() {
	ForcePlayerEnergyAmount(0);
	InitPlayers();
	RefreshPlayers();
	SetMaxEnergyAmount(0);
	SetPlayerStarted(False);

	foreach (Player in AllPlayers) {
		InitializePlayer(Player);
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Load the library
Void Load() {
	Unload();
}