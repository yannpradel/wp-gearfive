/**
 *	UI module: CheersCounter client side
 */
#Const Version		"1.0.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Modes/ChampionCup/UIModules/CheersCounter_Client.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV
#Include "Libs/Nadeo/CMGame/Utils/Stylesheet.Script.txt" as Stylesheet
#Include "Libs/Nadeo/CMGame/Utils/Icons.Script.txt" as Icons
#Include "Libs/Nadeo/CMGame/Modes/UIModules_Client.Script.txt" as UIModules
#Include "Libs/Nadeo/Trackmania/Modes/ChampionTMGL/TMGLAPI_Client.Script.txt" as TMGLAPI
#Include "Libs/Nadeo/Trackmania/Modes/ChampionCup/UIModules/CheersCounter_Common.Script.txt" as UIModules_CheersCounter_Common
#Include "Libs/Nadeo/Trackmania/Modes/ChampionCommon/ZIndex.Script.txt" as ZIndex

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Public
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the id of the UI module
Text GetId() {
	return UIModules_CheersCounter_Common::C_Id;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the type of layer of the UI module
CUILayer::EUILayerType GetLayerType() {
	return UIModules_CheersCounter_Common::C_LayerType;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the module manialink
 *
 *  @return                           The module manialink
 */
Text GetML() {
	return MV::Create(
GetId(), 3,
"""
<frame id="frame-global" z-index="{{{ZIndex::C_ZIndex_CheersCounter}}}" hidden="1">
	<frame {{{UIModules::CustomizableUIModule(UIModules_CheersCounter_Common::C_UIModuleConfig)}}}>
		<frame id="frame-cheers-counter">
			<quad size="8 8" halign="right" valign="center" image="{{{Icons::C_Icon_128x128_Settings_Favorite_Full}}}" colorize="ffffff" />
			<label id="label-cheers-counter" pos="-9 -0.5" size="20 6" halign="right" valign="center2" textfont="{{{Stylesheet::GetFont(Stylesheet::C_Font_Weight_ExtraBold)}}}" textcolor="ffffff" textsize="3" textprefix="$i" />
		</frame>
	</frame>
</frame>
""",
"""
""",
"""
***MainInit***
***
declare CMlFrame Frame_Global;
declare CMlFrame Frame_CheersCounter;
declare CMlLabel Label_CheersCounter;

declare netread Boolean Net_ChampionCup_CheersCounter_IsVisible for UI;

declare Boolean DisplayModule;
declare Integer CheersTotal;
***

***MainStart***
***
Frame_Global <=> (Page.GetFirstChild("frame-global") as CMlFrame);
Frame_CheersCounter <=> (Page.GetFirstChild("frame-cheers-counter") as CMlFrame);
Label_CheersCounter <=> (Frame_CheersCounter.GetFirstChild("label-cheers-counter") as CMlLabel);

DisplayModule = Frame_Global.Visible;
CheersTotal = {{{TMGLAPI::P}}}GetCheersTotal();
Frame_CheersCounter.Visible = (InputPlayer != Null && InputPlayer.SpawnStatus == CSmPlayer::ESpawnStatus::NotSpawned);
Label_CheersCounter.Value = ""^CheersTotal;
***

***MainLoop***
***
if (PageIsVisible) {
	if (DisplayModule != Net_ChampionCup_CheersCounter_IsVisible) {
		DisplayModule = Net_ChampionCup_CheersCounter_IsVisible;
		Frame_Global.Visible = DisplayModule;
	}

	if (Frame_Global.Visible) {
		if (Frame_CheersCounter.Visible != (InputPlayer != Null && InputPlayer.SpawnStatus == CSmPlayer::ESpawnStatus::NotSpawned)) {
			Frame_CheersCounter.Visible = (InputPlayer != Null && InputPlayer.SpawnStatus == CSmPlayer::ESpawnStatus::NotSpawned);
		}

		if (Frame_CheersCounter.Visible) {
			if (CheersTotal != {{{TMGLAPI::P}}}GetCheersTotal()) {
				CheersTotal = {{{TMGLAPI::P}}}GetCheersTotal();
				Label_CheersCounter.Value = ""^CheersTotal;
			}
		}
	}
}
***
""",
[
	UIModules::Component(),
	TMGLAPI::Component()
],
[]
	);
}