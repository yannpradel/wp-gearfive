/**
 *	Structures for Prestige
 */
#Const Version		"2.2.0"
#Const ScriptName	"Libs/Nadeo/Trackmania/Structures/PrestigeStruct.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "TextLib" as TL
#Include "MathLib" as ML
#Include "Libs/Nadeo/CMGame/Modes/Clans_Common.Script.txt" as Clans
#Include "Libs/Nadeo/CMGame/Utils/PrestigeNotificationObserver.Script.txt" as NotificationObserver
#Include "Libs/Nadeo/CMGame/Utils/Tools.Script.txt" as Tools

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_ComponentName "lib-prestige-struct"
#Const P "LibPrestigeStruct_"

#Const C_FirstPrestigeYear 2023 //< Prestige skins starts from January 2023

#Const C_PrestigeCategory_BronzeIndex 1
#Const C_PrestigeCategory_SilverIndex 2
#Const C_PrestigeCategory_GoldIndex 3
#Const C_PrestigeCategory_AuthorIndex 4

#Const C_PrestigeColor_Bronze "CF7B4A"
#Const C_PrestigeColor_Silver "FFFFFF"
#Const C_PrestigeColor_Gold "FFCC66"
#Const C_PrestigeColor_Author "26CF23"

#Const C_PrestigeColors [ //< Key corresponds to prestige category level
	1 => "CF7B4A",
	2 => "FFFFFF",
	3 => "FFCC66",
	4 => "26CF23"
]

#Const C_PrestigeColorsBackground [ //< Key corresponds to prestige category level
	1 => "963700",
	2 => "363636",
	3 => "c29313",
	4 => "2af227"
]

#Const C_PrestigeColorsFlareLight [ //< Key corresponds to prestige category level
	1 => ["613821", "4a230d", "4a1c01"],
	2 => ["363636", "363636", "363636"],
	3 => ["694d14", "2e1f00", "543b0c"],
	4 => ["234f0d", "153604", "192b0f"]
]

#Const C_PrestigeModes [
	CUserV2Manager::EPrestigeMode::Season => _("|Mode|Season"),
	CUserV2Manager::EPrestigeMode::Ranked => _("|Mode|Ranked"),
	CUserV2Manager::EPrestigeMode::Royal => _("|Mode|Royal")
]

#Const C_RankedCategoryTypes [
	"Bronze" => _("Bronze"),
	"Silver" => _("Silver"),
	"Gold" => _("Gold"),
	"Master" => _("Master")
]

#Const C_RoyalCategoryTypesNames [ //< The key is the year
	2023 => [
		"Team01" => _("|Clan|Flamingo"),
		"Team02" => _("|Clan|Pig"),
		"Team03" => _("|Clan|Clown Fish"),
		"Team04" => _("|Clan|Fox"),
		"Team05" => _("|Clan|Octopus"),
		"Team06" => _("|Clan|Butterfly"),
		"Team07" => _("|Clan|Crocodile"),
		"Team08" => _("|Clan|Grasshopper"),
		"Team09" => _("|Clan|Ladybug"),
		"Team10" => _("|Clan|Macaw Parrot"),
		"Team11" => _("|Clan|Giraffe"),
		"Team12" => _("|Clan|Bee"),
		"Team13" => _("|Clan|Dolphin"),
		"Team14" => _("|Clan|Peafowl"),
		"Team15" => _("|Clan|Kangaroo"),
		"Team16" => _("|Clan|Monkey"),
		"Team17" => _("|Clan|Panda"),
		"Team18" => _("|Clan|Zebra"),
		"Team19" => _("|Clan|Rabbit"),
		"Team20" => _("|Clan|Polar Bear")
	],
	2024 => [
		"Team01" => _("|Clan|Apple"),
		"Team02" => _("|Clan|Avocado"),
		"Team03" => _("|Clan|Banana"),
		"Team04" => _("|Clan|Blackberry"),
		"Team05" => _("|Clan|Blueberry"),
		"Team06" => _("|Clan|Cherry"),
		"Team07" => _("|Clan|Coconut"),
		"Team08" => _("|Clan|Date"),
		"Team09" => _("|Clan|Dragon Fruit"),
		"Team10" => _("|Clan|Fig"),
		"Team11" => _("|Clan|Grape"),
		"Team12" => _("|Clan|Kiwi"),
		"Team13" => _("|Clan|Litchi"),
		"Team14" => _("|Clan|Mango"),
		"Team15" => _("|Clan|Orange"),
		"Team16" => _("|Clan|Papaya"),
		"Team17" => _("|Clan|Peach"),
		"Team18" => _("|Clan|Pineapple"),
		"Team19" => _("|Clan|Strawberry"),
		"Team20" => _("|Clan|Watermelon")
	]
]

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Structures
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Struct K_Prestige {
	Text CategoryType;
	Integer CategoryLevel;
	Boolean IsUnlocked;
	CUserV2Manager::EPrestigeMode Mode;
	Text PrestigeId;
	Integer PrestigeLevel;
	Text RewardDisplayName;
	Text RewardFileUrl;
	Text RewardThumbnailUrl;
	Text RewardType;
	Text SkinOptions;
	Integer StatCurrentValue;
	Integer StatValueForNextLevel;
	Integer TimeStamp;
	Integer Year;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
CUserV2Manager::EPrestigeMode ConvertPrestigeMode(NWebServicesPrestige::EPrestigeMode _Mode) {
	switch (_Mode) {
		case NWebServicesPrestige::EPrestigeMode::Season: return CUserV2Manager::EPrestigeMode::Season;
		case NWebServicesPrestige::EPrestigeMode::Ranked: return CUserV2Manager::EPrestigeMode::Ranked;
		case NWebServicesPrestige::EPrestigeMode::Royal: return CUserV2Manager::EPrestigeMode::Royal;
	}

	return CUserV2Manager::EPrestigeMode::Unknown;
}

Integer ConvertToRankedRank(Text _CategoryType, Integer _CategoryLevel) {
	switch (TL::ToLowerCase(_CategoryType)) {
		case "bronze": return ML::Clamp(_CategoryLevel, 1, 3);
		case "silver": return ML::Clamp(_CategoryLevel+3, 4, 6);
		case "gold": return ML::Clamp(_CategoryLevel+6, 7, 9);
		case "master": return ML::Clamp(_CategoryLevel+9, 10, 13);
	}
	return _CategoryLevel;
}
Integer ConvertToRankedRank(K_Prestige _Prestige) {
	return ConvertToRankedRank(_Prestige.CategoryType, _Prestige.CategoryLevel);
}

K_Prestige ConvertPrestige(NotificationObserver::K_Notification _Prestige) {
	return K_Prestige {
		CategoryType = _Prestige.CategoryType,
		CategoryLevel = _Prestige.CategoryLevel,
		Mode = ConvertPrestigeMode(_Prestige.Mode),
		PrestigeId = _Prestige.PrestigeId,
		PrestigeLevel = _Prestige.PrestigeLevel,
		RewardDisplayName = _Prestige.RewardDisplayName,
		RewardFileUrl = _Prestige.RewardFileUrl,
		RewardThumbnailUrl = _Prestige.RewardThumbnailUrl,
		RewardType = _Prestige.RewardType,
		SkinOptions = _Prestige.SkinOptions,
		StatCurrentValue = _Prestige.StatCurrentValue,
		StatValueForNextLevel = _Prestige.StatValueForNextLevel,
		TimeStamp = _Prestige.TimeStamp,
		Year = _Prestige.Year
	};
}

K_Prestige ConvertPrestige(CPrestige _Prestige) {
	return K_Prestige {
		CategoryType = _Prestige.CategoryType,
		CategoryLevel = _Prestige.CategoryLevel,
		IsUnlocked = _Prestige.IsUnlocked,
		Mode = ConvertPrestigeMode(_Prestige.Mode),
		PrestigeId = _Prestige.PrestigeId,
		PrestigeLevel = _Prestige.PrestigeLevel,
		RewardDisplayName = _Prestige.RewardDisplayName,
		RewardFileUrl = _Prestige.RewardFileUrl,
		RewardThumbnailUrl = _Prestige.RewardThumbnailUrl,
		RewardType = _Prestige.RewardType,
		StatCurrentValue = _Prestige.StatCurrentValue,
		StatValueForNextLevel = _Prestige.StatValueForNextLevel,
		SkinOptions = _Prestige.SkinOptions,
		TimeStamp = _Prestige.TimeStamp,
		Year = _Prestige.Year
	};
}

K_Prestige ConvertPrestige(CUserPrestige _Prestige) {
	return K_Prestige {
		CategoryType = _Prestige.CategoryType,
		CategoryLevel = _Prestige.CategoryLevel,
		IsUnlocked = True,
		Mode = ConvertPrestigeMode(_Prestige.Mode),
		PrestigeId = _Prestige.PrestigeId,
		PrestigeLevel = _Prestige.PrestigeLevel,
		SkinOptions = _Prestige.SkinOptions,
		TimeStamp = _Prestige.TimeStamp,
		Year = _Prestige.Year
	};
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/// Get the clan style associated to the given year
/// New royal prestige skins are released every years and belong to their own clan style
Integer GetClanStyleFromYear(Integer _Year) {
	switch (_Year) {
		case C_FirstPrestigeYear: return Clans::C_ClanStyle_Animals;
		case 2024: return Clans::C_ClanStyle_Fruits;
	}

	return Clans::C_ClanStyle_Default;
}

/// Get the clan style of the current year
/// If the current year is not yet added, return the latest available year
Integer GetCurrentYearClanStyle() {
	for (Year, C_FirstPrestigeYear, Tools::GetYear(), -1) {
		if (GetClanStyleFromYear(Year) != Clans::C_ClanStyle_Default) {
			return GetClanStyleFromYear(Year);
		}
	}

	return GetClanStyleFromYear(C_FirstPrestigeYear);
}