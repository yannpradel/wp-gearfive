/**
 *  Component : OnlineServicesStatusAPI, API for the status of the online services
 */
#Const Version    "1.0.0"
#Const ScriptName "Libs/Nadeo/Trackmania/API/OnlineServicesStatusAPI.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "Libs/Nadeo/CMGame/Utils/Http.Script.txt" as Http
#Include "Libs/Nadeo/CMGame/Utils/Config.Script.txt" as Config
#Include "Libs/Nadeo/CMGame/Utils/ManiaView2.Script.txt" as MV

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_ComponentName "onlineservices-status-api"
#Const P "OnlineServicesStatusAPI_"

#Const C_Route_GetStatus "/status.json"

#Const C_Headers [
	"Accept" => "application/json",
	"Content-Type" => "application/json"
]

#Struct K_Http_OnlineService {
	Text name;
	Integer statusCode;
	Text impactedByEvent;
}

#Struct K_Http_OnlineServiceGroup {
	Text type;
	K_Http_OnlineService[] services;
}

#Struct K_Http_OnlineServiceEvent {
	Text type;
	Integer startTimestamp;
	Integer endTimestamp;
}

#Struct K_Http_OnlineServiceOverview {
	K_Http_OnlineServiceGroup[] servicesGroups;
	K_Http_OnlineServiceEvent event;
}

#Struct OnlineServicesStatusAPI_K_OnlineService {
	Text Name;
	Integer StatusCode;
	Text ImpactedByEvent;
}

#Struct OnlineServicesStatusAPI_K_OnlineServiceGroup {
	Text Type;
	OnlineServicesStatusAPI_K_OnlineService[] Services;
}

#Struct OnlineServicesStatusAPI_K_OnlineServiceEvent {
	Text Type;
	Integer StartTimestamp;
	Integer EndTimestamp;
}

#Struct OnlineServicesStatusAPI_K_OnlineServiceOverview {
	OnlineServicesStatusAPI_K_OnlineServiceGroup[] ServicesGroups;
	OnlineServicesStatusAPI_K_OnlineServiceEvent Event;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Start a request to get the onlive services status
 *
 *	@return														The request
 */
Http::K_Request GetStatus() {
	return Http::CreateGet(Config::Get().WebsiteOnlineServicesStatusPage^C_Route_GetStatus, C_Headers, True);
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Parse the response to the GetStatus request
OnlineServicesStatusAPI_K_OnlineServiceOverview GetResponseFromGetStatus(Http::K_Request _Request) {
	declare K_Http_OnlineServiceOverview HttOnlineServiceOverview;
	HttOnlineServiceOverview.fromjson(Http::GetResult(_Request));

	declare OnlineServicesStatusAPI_K_OnlineServiceGroup[] ServicesGroups;
	foreach (ServiceGroup in HttOnlineServiceOverview.servicesGroups) {
		declare OnlineServicesStatusAPI_K_OnlineService[] Services;
		foreach (Service in ServiceGroup.services) {
			Services.add(OnlineServicesStatusAPI_K_OnlineService {
				Name = Service.name,
				StatusCode = Service.statusCode,
				ImpactedByEvent = Service.impactedByEvent
			});
		}
		ServicesGroups.add(OnlineServicesStatusAPI_K_OnlineServiceGroup {
			Type = ServiceGroup.type,
			Services = Services
		});
	}

	declare OnlineServicesStatusAPI_K_OnlineServiceOverview OnlineServicesStatus = OnlineServicesStatusAPI_K_OnlineServiceOverview {
		ServicesGroups = ServicesGroups,
		Event = OnlineServicesStatusAPI_K_OnlineServiceEvent {
			Type = HttOnlineServiceOverview.event.type,
			StartTimestamp = HttOnlineServiceOverview.event.startTimestamp,
			EndTimestamp = HttOnlineServiceOverview.event.endTimestamp
		}
	};

	return OnlineServicesStatus;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
Text Component() {
	return MV::Component(
		C_ComponentName,
		"""
		""",
		"""
{{{dumptype(OnlineServicesStatusAPI_K_OnlineService)}}}
{{{dumptype(OnlineServicesStatusAPI_K_OnlineServiceGroup)}}}
{{{dumptype(OnlineServicesStatusAPI_K_OnlineServiceEvent)}}}
{{{dumptype(OnlineServicesStatusAPI_K_OnlineServiceOverview)}}}
		""",
		"""
		""",
[],
[]
	);
}