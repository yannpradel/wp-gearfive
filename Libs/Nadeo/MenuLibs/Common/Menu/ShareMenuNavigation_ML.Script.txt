/**
 *	Manialink functions for the `ShareMenuNavigation` component
 */
#Const Version		"2023-04-03"
#Const ScriptName	"Libs/Nadeo/MenuLibs/Common/Menu/ShareMenuNavigation_ML.Script.txt"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Libraries
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Include "TextLib" as TL
#Include "Libs/Nadeo/MenuLibs/Common/Manialink/ManiaView2.Script.txt" as MV

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Structures
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Struct K_MenuNavigationEvent {
	CMlScriptEvent::EMenuNavAction MenuNavAction;
	Boolean IsActionAutoRepeat;
	Integer UserIndex;
	Boolean IsFromMouse;
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Constants
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
#Const C_Name "share-menu-navigation" //< Component name
#Const P "ShareMenuNavigation_ShareMenuNavigation::" //< Prefix use to differentiate functions/variables in the script
#Const Q "ShareMenuNavigation_ShareMenuNavigation"

#Const C_TextToMenuNavAction [
	"::EMenuNavAction::Up" => CMlScriptEvent::EMenuNavAction::Up,
	"::EMenuNavAction::Right" => CMlScriptEvent::EMenuNavAction::Right,
	"::EMenuNavAction::Left" => CMlScriptEvent::EMenuNavAction::Left,
	"::EMenuNavAction::Down" => CMlScriptEvent::EMenuNavAction::Down,
	"::EMenuNavAction::Select" => CMlScriptEvent::EMenuNavAction::Select,
	"::EMenuNavAction::Cancel" => CMlScriptEvent::EMenuNavAction::Cancel,
	"::EMenuNavAction::PageUp" => CMlScriptEvent::EMenuNavAction::PageUp,
	"::EMenuNavAction::PageDown" => CMlScriptEvent::EMenuNavAction::PageDown,
	"::EMenuNavAction::AppMenu" => CMlScriptEvent::EMenuNavAction::AppMenu,
	"::EMenuNavAction::Action1" => CMlScriptEvent::EMenuNavAction::Action1,
	"::EMenuNavAction::Action2" => CMlScriptEvent::EMenuNavAction::Action2,
	"::EMenuNavAction::Action3" => CMlScriptEvent::EMenuNavAction::Action3,
	"::EMenuNavAction::Action4" => CMlScriptEvent::EMenuNavAction::Action4,
	"::EMenuNavAction::ScrollUp" => CMlScriptEvent::EMenuNavAction::ScrollUp,
	"::EMenuNavAction::ScrollDown" => CMlScriptEvent::EMenuNavAction::ScrollDown
]

#Const C_Event_MenuNavigation "ShareMenuNavigation_MenuNavigation"

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
// Functions
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
Boolean Private_TextActionExists(Text _Text) {
	return C_TextToMenuNavAction.existskey(_Text);
}

CMlScriptEvent::EMenuNavAction Private_TextToAction(Text _Text) {
	return C_TextToMenuNavAction[_Text];
}

K_MenuNavigationEvent[] GetPendingEvents(CMlScript _This) {
	declare K_MenuNavigationEvent[] MenuLibs_ShareMenuNavigation_PendingEvents for _This.Page = [];
	return MenuLibs_ShareMenuNavigation_PendingEvents;
}

Void MainLoop(CMlScript _This) {
	declare K_MenuNavigationEvent[] MenuLibs_ShareMenuNavigation_PendingEvents for _This.Page = [];
	MenuLibs_ShareMenuNavigation_PendingEvents = [];

	foreach (Event in _This.PendingEvents) {
		switch (Event.Type) {
			case CMlScriptEvent::Type::PluginCustomEvent: {
				switch (Event.CustomEventType) {
					case C_Event_MenuNavigation: {
						if (Event.CustomEventData.count >= 3) {
							declare Text TextAction = Event.CustomEventData[0];
							if (Private_TextActionExists(TextAction)) {
								declare K_MenuNavigationEvent MenuNavigationEvent;
								MenuNavigationEvent.MenuNavAction = Private_TextToAction(TextAction);
								MenuNavigationEvent.IsActionAutoRepeat = (TL::ToLowerCase(Event.CustomEventData[1]) == "true");
								MenuNavigationEvent.UserIndex = TL::ToInteger(Event.CustomEventData[2]);
								MenuNavigationEvent.IsFromMouse = (TL::ToLowerCase(Event.CustomEventData[3]) == "true");
								MenuLibs_ShareMenuNavigation_PendingEvents.add(MenuNavigationEvent);
							}
						}
					}
				} 
			}
		}
	}
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //
/** Get the component
 *
 *	@return														The component id
 */
Text ComponentV2() {
	return MV::ComponentV2(
		C_Name,
		"""
		""",
		"""
#Include "Libs/Nadeo/MenuLibs/Common/Menu/ShareMenuNavigation_ML.Script.txt" as {{{Q}}}
		""",
		"""
***MainLoop***
***
{{{P}}}MainLoop(This);
***
		""",
		[],
		[]
	);
}